{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " ## Clasificarea Restaurantelor din Ghidul Michelin:\n",
    "# Analize și predicții folosind tehnici de Data Mining\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "CSIE - Master Statistica Aplicata & Data Science\n",
    "Proiect Data Mining - Draghicescu Alexandra-Elena grupa 1153 | Bucuresti, 2024"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import OneHotEncoder, StandardScaler, LabelEncoder\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Intro Data Set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the dataset\n",
    "data = pd.read_csv('michelin_my_maps.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(17294, 14)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Address</th>\n",
       "      <th>Location</th>\n",
       "      <th>Price</th>\n",
       "      <th>Cuisine</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>PhoneNumber</th>\n",
       "      <th>Url</th>\n",
       "      <th>WebsiteUrl</th>\n",
       "      <th>Award</th>\n",
       "      <th>GreenStar</th>\n",
       "      <th>FacilitiesAndServices</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Taïrroir</td>\n",
       "      <td>6F, 299 Lequn 3rd Road, Zhongshan District, Ta...</td>\n",
       "      <td>Taipei, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Taiwanese contemporary</td>\n",
       "      <td>121.559303</td>\n",
       "      <td>25.082896</td>\n",
       "      <td>8.862850e+11</td>\n",
       "      <td>https://guide.michelin.com/en/taipei-region/ta...</td>\n",
       "      <td>https://www.tairroir.com/</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Wheelchair access</td>\n",
       "      <td>A portmanteau of Taiwan and terroir, Taïrroir ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>JL Studio</td>\n",
       "      <td>2F, 689, Section 4, Yifeng Road, Nantun Distri...</td>\n",
       "      <td>Taichung, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Singaporean, Contemporary</td>\n",
       "      <td>120.628520</td>\n",
       "      <td>24.150486</td>\n",
       "      <td>8.864238e+11</td>\n",
       "      <td>https://guide.michelin.com/en/taichung-region/...</td>\n",
       "      <td>https://jlstudiotw.com</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Wheelchair access</td>\n",
       "      <td>JL stands for Jimmy Lim, a Singaporean chef wh...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Le Palais</td>\n",
       "      <td>17F, Palais de Chine Hotel, 3, Section 1, Chen...</td>\n",
       "      <td>Taipei, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Cantonese</td>\n",
       "      <td>121.516889</td>\n",
       "      <td>25.049163</td>\n",
       "      <td>8.862218e+11</td>\n",
       "      <td>https://guide.michelin.com/en/taipei-region/ta...</td>\n",
       "      <td>https://www.palaisdechinehotel.com/pdc-en/page...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Wheelchair access</td>\n",
       "      <td>After the departure of the Macanese chef, the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addison</td>\n",
       "      <td>5200 Grand Del Mar Way, San Diego, 92130, USA</td>\n",
       "      <td>San Diego, USA</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Contemporary, Californian</td>\n",
       "      <td>-117.198891</td>\n",
       "      <td>32.941297</td>\n",
       "      <td>1.858314e+10</td>\n",
       "      <td>https://guide.michelin.com/en/california/us-sa...</td>\n",
       "      <td>https://www.addisondelmar.com/</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Garden or park,Inter...</td>\n",
       "      <td>Chef William Bradley has helmed the stoves at ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Atelier Crenn</td>\n",
       "      <td>3127 Fillmore St., San Francisco, 94123, USA</td>\n",
       "      <td>San Francisco, USA</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Contemporary, French</td>\n",
       "      <td>-122.435860</td>\n",
       "      <td>37.798350</td>\n",
       "      <td>1.415440e+10</td>\n",
       "      <td>https://guide.michelin.com/en/california/san-f...</td>\n",
       "      <td>https://www.ateliercrenn.com/</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>1</td>\n",
       "      <td>Air conditioning,Interesting wine list,Wheelch...</td>\n",
       "      <td>At the hands of accomplished Chef Dominique Cr...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Name                                            Address  \\\n",
       "0       Taïrroir  6F, 299 Lequn 3rd Road, Zhongshan District, Ta...   \n",
       "1      JL Studio  2F, 689, Section 4, Yifeng Road, Nantun Distri...   \n",
       "2      Le Palais  17F, Palais de Chine Hotel, 3, Section 1, Chen...   \n",
       "3        Addison      5200 Grand Del Mar Way, San Diego, 92130, USA   \n",
       "4  Atelier Crenn       3127 Fillmore St., San Francisco, 94123, USA   \n",
       "\n",
       "             Location Price                    Cuisine   Longitude   Latitude  \\\n",
       "0      Taipei, Taiwan  $$$$     Taiwanese contemporary  121.559303  25.082896   \n",
       "1    Taichung, Taiwan  $$$$  Singaporean, Contemporary  120.628520  24.150486   \n",
       "2      Taipei, Taiwan  $$$$                  Cantonese  121.516889  25.049163   \n",
       "3      San Diego, USA  $$$$  Contemporary, Californian -117.198891  32.941297   \n",
       "4  San Francisco, USA  $$$$       Contemporary, French -122.435860  37.798350   \n",
       "\n",
       "    PhoneNumber                                                Url  \\\n",
       "0  8.862850e+11  https://guide.michelin.com/en/taipei-region/ta...   \n",
       "1  8.864238e+11  https://guide.michelin.com/en/taichung-region/...   \n",
       "2  8.862218e+11  https://guide.michelin.com/en/taipei-region/ta...   \n",
       "3  1.858314e+10  https://guide.michelin.com/en/california/us-sa...   \n",
       "4  1.415440e+10  https://guide.michelin.com/en/california/san-f...   \n",
       "\n",
       "                                          WebsiteUrl    Award  GreenStar  \\\n",
       "0                          https://www.tairroir.com/  3 Stars          0   \n",
       "1                             https://jlstudiotw.com  3 Stars          0   \n",
       "2  https://www.palaisdechinehotel.com/pdc-en/page...  3 Stars          0   \n",
       "3                     https://www.addisondelmar.com/  3 Stars          0   \n",
       "4                      https://www.ateliercrenn.com/  3 Stars          1   \n",
       "\n",
       "                               FacilitiesAndServices  \\\n",
       "0                 Air conditioning,Wheelchair access   \n",
       "1        Air conditioning,Car park,Wheelchair access   \n",
       "2        Air conditioning,Car park,Wheelchair access   \n",
       "3  Air conditioning,Car park,Garden or park,Inter...   \n",
       "4  Air conditioning,Interesting wine list,Wheelch...   \n",
       "\n",
       "                                         Description  \n",
       "0  A portmanteau of Taiwan and terroir, Taïrroir ...  \n",
       "1  JL stands for Jimmy Lim, a Singaporean chef wh...  \n",
       "2  After the departure of the Macanese chef, the ...  \n",
       "3  Chef William Bradley has helmed the stoves at ...  \n",
       "4  At the hands of accomplished Chef Dominique Cr...  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 17294 entries, 0 to 17293\n",
      "Data columns (total 14 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   Name                   17294 non-null  object \n",
      " 1   Address                17294 non-null  object \n",
      " 2   Location               17294 non-null  object \n",
      " 3   Price                  17293 non-null  object \n",
      " 4   Cuisine                17293 non-null  object \n",
      " 5   Longitude              17294 non-null  float64\n",
      " 6   Latitude               17294 non-null  float64\n",
      " 7   PhoneNumber            16928 non-null  float64\n",
      " 8   Url                    17294 non-null  object \n",
      " 9   WebsiteUrl             14884 non-null  object \n",
      " 10  Award                  17294 non-null  object \n",
      " 11  GreenStar              17294 non-null  int64  \n",
      " 12  FacilitiesAndServices  16409 non-null  object \n",
      " 13  Description            17293 non-null  object \n",
      "dtypes: float64(3), int64(1), object(10)\n",
      "memory usage: 1.8+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Longitude</th>\n",
       "      <td>17294.0</td>\n",
       "      <td>1.724651e+01</td>\n",
       "      <td>6.113841e+01</td>\n",
       "      <td>-1.237191e+02</td>\n",
       "      <td>-3.689379e-01</td>\n",
       "      <td>6.641560e+00</td>\n",
       "      <td>1.523340e+01</td>\n",
       "      <td>1.398257e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Latitude</th>\n",
       "      <td>17294.0</td>\n",
       "      <td>4.041490e+01</td>\n",
       "      <td>1.358626e+01</td>\n",
       "      <td>-3.462679e+01</td>\n",
       "      <td>3.661320e+01</td>\n",
       "      <td>4.383351e+01</td>\n",
       "      <td>4.886302e+01</td>\n",
       "      <td>6.616656e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PhoneNumber</th>\n",
       "      <td>16928.0</td>\n",
       "      <td>5.348054e+11</td>\n",
       "      <td>9.396673e+12</td>\n",
       "      <td>3.522369e+07</td>\n",
       "      <td>3.314703e+10</td>\n",
       "      <td>3.852091e+10</td>\n",
       "      <td>3.904375e+11</td>\n",
       "      <td>9.719716e+14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GreenStar</th>\n",
       "      <td>17294.0</td>\n",
       "      <td>2.220423e-02</td>\n",
       "      <td>1.473515e-01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count          mean           std           min           25%  \\\n",
       "Longitude    17294.0  1.724651e+01  6.113841e+01 -1.237191e+02 -3.689379e-01   \n",
       "Latitude     17294.0  4.041490e+01  1.358626e+01 -3.462679e+01  3.661320e+01   \n",
       "PhoneNumber  16928.0  5.348054e+11  9.396673e+12  3.522369e+07  3.314703e+10   \n",
       "GreenStar    17294.0  2.220423e-02  1.473515e-01  0.000000e+00  0.000000e+00   \n",
       "\n",
       "                      50%           75%           max  \n",
       "Longitude    6.641560e+00  1.523340e+01  1.398257e+02  \n",
       "Latitude     4.383351e+01  4.886302e+01  6.616656e+01  \n",
       "PhoneNumber  3.852091e+10  3.904375e+11  9.719716e+14  \n",
       "GreenStar    0.000000e+00  0.000000e+00  1.000000e+00  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#info on numeric data\n",
    "data.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>unique</th>\n",
       "      <th>top</th>\n",
       "      <th>freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Name</th>\n",
       "      <td>17294</td>\n",
       "      <td>16634</td>\n",
       "      <td>Racines</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Address</th>\n",
       "      <td>17294</td>\n",
       "      <td>16916</td>\n",
       "      <td>Ferdinand Bolstraat 333, Amsterdam, 1072 LH, N...</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Location</th>\n",
       "      <td>17294</td>\n",
       "      <td>5640</td>\n",
       "      <td>Tokyo, Japan</td>\n",
       "      <td>547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Price</th>\n",
       "      <td>17293</td>\n",
       "      <td>32</td>\n",
       "      <td>€€</td>\n",
       "      <td>4684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cuisine</th>\n",
       "      <td>17293</td>\n",
       "      <td>1612</td>\n",
       "      <td>Modern Cuisine</td>\n",
       "      <td>2735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Url</th>\n",
       "      <td>17294</td>\n",
       "      <td>17294</td>\n",
       "      <td>https://guide.michelin.com/en/prague/prague/re...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WebsiteUrl</th>\n",
       "      <td>14884</td>\n",
       "      <td>14657</td>\n",
       "      <td>http://www.xinrongji.cc</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Award</th>\n",
       "      <td>17294</td>\n",
       "      <td>5</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>10510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FacilitiesAndServices</th>\n",
       "      <td>16409</td>\n",
       "      <td>878</td>\n",
       "      <td>Air conditioning</td>\n",
       "      <td>1492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Description</th>\n",
       "      <td>17293</td>\n",
       "      <td>17292</td>\n",
       "      <td>Here, the second generation of the family sell...</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       count unique  \\\n",
       "Name                   17294  16634   \n",
       "Address                17294  16916   \n",
       "Location               17294   5640   \n",
       "Price                  17293     32   \n",
       "Cuisine                17293   1612   \n",
       "Url                    17294  17294   \n",
       "WebsiteUrl             14884  14657   \n",
       "Award                  17294      5   \n",
       "FacilitiesAndServices  16409    878   \n",
       "Description            17293  17292   \n",
       "\n",
       "                                                                     top  \\\n",
       "Name                                                             Racines   \n",
       "Address                Ferdinand Bolstraat 333, Amsterdam, 1072 LH, N...   \n",
       "Location                                                    Tokyo, Japan   \n",
       "Price                                                                 €€   \n",
       "Cuisine                                                   Modern Cuisine   \n",
       "Url                    https://guide.michelin.com/en/prague/prague/re...   \n",
       "WebsiteUrl                                       http://www.xinrongji.cc   \n",
       "Award                                               Selected Restaurants   \n",
       "FacilitiesAndServices                                   Air conditioning   \n",
       "Description            Here, the second generation of the family sell...   \n",
       "\n",
       "                        freq  \n",
       "Name                       9  \n",
       "Address                    4  \n",
       "Location                 547  \n",
       "Price                   4684  \n",
       "Cuisine                 2735  \n",
       "Url                        1  \n",
       "WebsiteUrl                 5  \n",
       "Award                  10510  \n",
       "FacilitiesAndServices   1492  \n",
       "Description                2  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe(include='object').T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop unnecessary data column \n",
    "df=data.drop(['Longitude','Latitude','Address','PhoneNumber','WebsiteUrl','Description'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 17294 entries, 0 to 17293\n",
      "Data columns (total 8 columns):\n",
      " #   Column                 Non-Null Count  Dtype \n",
      "---  ------                 --------------  ----- \n",
      " 0   Name                   17294 non-null  object\n",
      " 1   Location               17294 non-null  object\n",
      " 2   Price                  17293 non-null  object\n",
      " 3   Cuisine                17293 non-null  object\n",
      " 4   Url                    17294 non-null  object\n",
      " 5   Award                  17294 non-null  object\n",
      " 6   GreenStar              17294 non-null  int64 \n",
      " 7   FacilitiesAndServices  16409 non-null  object\n",
      "dtypes: int64(1), object(7)\n",
      "memory usage: 1.1+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Name                       0\n",
       "Location                   0\n",
       "Price                      1\n",
       "Cuisine                    1\n",
       "Url                        0\n",
       "Award                      0\n",
       "GreenStar                  0\n",
       "FacilitiesAndServices    885\n",
       "dtype: int64"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "#considering FacilitiesAndServices as being optional,I ll drop the restaurants with no price and no cuisine \n",
    "#considering 1 single value as being not very influent \n",
    "df = df.dropna(subset=['Price', 'Cuisine'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 17293 entries, 0 to 17293\n",
      "Data columns (total 8 columns):\n",
      " #   Column                 Non-Null Count  Dtype \n",
      "---  ------                 --------------  ----- \n",
      " 0   Name                   17293 non-null  object\n",
      " 1   Location               17293 non-null  object\n",
      " 2   Price                  17293 non-null  object\n",
      " 3   Cuisine                17293 non-null  object\n",
      " 4   Url                    17293 non-null  object\n",
      " 5   Award                  17293 non-null  object\n",
      " 6   GreenStar              17293 non-null  int64 \n",
      " 7   FacilitiesAndServices  16409 non-null  object\n",
      "dtypes: int64(1), object(7)\n",
      "memory usage: 1.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>unique</th>\n",
       "      <th>top</th>\n",
       "      <th>freq</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Name</th>\n",
       "      <td>17293</td>\n",
       "      <td>16633</td>\n",
       "      <td>Racines</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Location</th>\n",
       "      <td>17293</td>\n",
       "      <td>5640</td>\n",
       "      <td>Tokyo, Japan</td>\n",
       "      <td>547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Price</th>\n",
       "      <td>17293</td>\n",
       "      <td>32</td>\n",
       "      <td>€€</td>\n",
       "      <td>4684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cuisine</th>\n",
       "      <td>17293</td>\n",
       "      <td>1612</td>\n",
       "      <td>Modern Cuisine</td>\n",
       "      <td>2735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Url</th>\n",
       "      <td>17293</td>\n",
       "      <td>17293</td>\n",
       "      <td>https://guide.michelin.com/en/prague/prague/re...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Award</th>\n",
       "      <td>17293</td>\n",
       "      <td>5</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>10509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FacilitiesAndServices</th>\n",
       "      <td>16409</td>\n",
       "      <td>878</td>\n",
       "      <td>Air conditioning</td>\n",
       "      <td>1492</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       count unique  \\\n",
       "Name                   17293  16633   \n",
       "Location               17293   5640   \n",
       "Price                  17293     32   \n",
       "Cuisine                17293   1612   \n",
       "Url                    17293  17293   \n",
       "Award                  17293      5   \n",
       "FacilitiesAndServices  16409    878   \n",
       "\n",
       "                                                                     top  \\\n",
       "Name                                                             Racines   \n",
       "Location                                                    Tokyo, Japan   \n",
       "Price                                                                 €€   \n",
       "Cuisine                                                   Modern Cuisine   \n",
       "Url                    https://guide.michelin.com/en/prague/prague/re...   \n",
       "Award                                               Selected Restaurants   \n",
       "FacilitiesAndServices                                   Air conditioning   \n",
       "\n",
       "                        freq  \n",
       "Name                       9  \n",
       "Location                 547  \n",
       "Price                   4684  \n",
       "Cuisine                 2735  \n",
       "Url                        1  \n",
       "Award                  10509  \n",
       "FacilitiesAndServices   1492  "
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include='object').T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Award\n",
       "Selected Restaurants    10509\n",
       "Bib Gourmand             3240\n",
       "1 Star                   2905\n",
       "2 Stars                   494\n",
       "3 Stars                   145\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Award'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Price\n",
       "€€      4684\n",
       "€€€     3271\n",
       "€€€€    1876\n",
       "$$      1178\n",
       "$$$      894\n",
       "$$$$     776\n",
       "¥¥¥      705\n",
       "€        548\n",
       "$        496\n",
       "££       451\n",
       "¥¥       426\n",
       "£££      352\n",
       "¥¥¥¥     239\n",
       "££££     214\n",
       "฿฿       212\n",
       "¥        201\n",
       "฿        128\n",
       "₩         87\n",
       "฿฿฿       82\n",
       "₫         76\n",
       "₩₩        59\n",
       "₫₫        48\n",
       "₺₺        46\n",
       "₩₩₩₩      46\n",
       "฿฿฿฿      44\n",
       "₩₩₩       40\n",
       "₫₫₫       25\n",
       "₺₺₺       24\n",
       "₺₺₺₺      21\n",
       "₫₫₫₫      15\n",
       "₺         15\n",
       "£         14\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Price'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "#encode the price variable \n",
    "df['Price_enc'] = df['Price'].apply(lambda x: len(x))  # Count the number of dollar signs\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Price_enc\n",
       "2    7104\n",
       "3    5393\n",
       "4    3231\n",
       "1    1565\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Price_enc'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location\n",
       "Tokyo, Japan                547\n",
       "Paris, France               446\n",
       "New York, USA               390\n",
       "London, United Kingdom      343\n",
       "Singapore                   283\n",
       "                           ... \n",
       "Eext, Netherlands             1\n",
       "Medemblik, Netherlands        1\n",
       "Flobecq, Belgium              1\n",
       "Hardenberg, Netherlands       1\n",
       "Wijdewormer, Netherlands      1\n",
       "Name: count, Length: 5640, dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Location'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 1: Split the 'Location' column into two new columns 'City' and 'Country'\n",
    "df[['City', 'Country']] = df['Location'].str.split(', ', expand=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import geopandas as gpd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Step 1: Group by country and count the number of restaurants\n",
    "country_counts = df.groupby('Country').size().reset_index(name='Restaurant Count')\n",
    "\n",
    "# Step 2: Load the Natural Earth countries shapefile\n",
    "# Replace 'path_to_your_data' with the actual path where you extracted the shapefile\n",
    "world = gpd.read_file(r'C:\\Users\\user\\Desktop\\STAT ANUL II\\DATA MINING\\PROIECT DATA MINING\\ne_110m_admin_0_countries.shp')\n",
    "\n",
    "# Step 3: Merge the world map with the restaurant data\n",
    "world = world.merge(country_counts, how='left', left_on='SOVEREIGNT', right_on='Country')\n",
    "\n",
    "# Step 4: Plot the map\n",
    "fig, ax = plt.subplots(1, 1, figsize=(15, 10))\n",
    "world.boundary.plot(ax=ax)\n",
    "world.plot(column='Restaurant Count', ax=ax, legend=True,\n",
    "           legend_kwds={'label': \"Number of Restaurants by Country\",\n",
    "                        'orientation': \"horizontal\"}, cmap='OrRd')\n",
    "\n",
    "plt.title('Number of Restaurants per Country')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['featurecla', 'scalerank', 'LABELRANK', 'SOVEREIGNT', 'SOV_A3',\n",
      "       'ADM0_DIF', 'LEVEL', 'TYPE', 'TLC', 'ADMIN',\n",
      "       ...\n",
      "       'FCLASS_TR', 'FCLASS_ID', 'FCLASS_PL', 'FCLASS_GR', 'FCLASS_IT',\n",
      "       'FCLASS_NL', 'FCLASS_SE', 'FCLASS_BD', 'FCLASS_UA', 'geometry'],\n",
      "      dtype='object', length=169)\n"
     ]
    }
   ],
   "source": [
    "# Load the shapefile\n",
    "world = gpd.read_file(r'C:\\Users\\user\\Desktop\\STAT ANUL II\\DATA MINING\\PROIECT DATA MINING\\ne_110m_admin_0_countries.shp')\n",
    "\n",
    "# Check the columns\n",
    "print(world.columns)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          featurecla  scalerank  LABELRANK                   SOVEREIGNT  \\\n",
      "0    Admin-0 country          1          6                         Fiji   \n",
      "1    Admin-0 country          1          3  United Republic of Tanzania   \n",
      "2    Admin-0 country          1          7               Western Sahara   \n",
      "3    Admin-0 country          1          2                       Canada   \n",
      "4    Admin-0 country          1          2     United States of America   \n",
      "..               ...        ...        ...                          ...   \n",
      "172  Admin-0 country          1          5           Republic of Serbia   \n",
      "173  Admin-0 country          1          6                   Montenegro   \n",
      "174  Admin-0 country          1          6                       Kosovo   \n",
      "175  Admin-0 country          1          5          Trinidad and Tobago   \n",
      "176  Admin-0 country          1          3                  South Sudan   \n",
      "\n",
      "    SOV_A3  ADM0_DIF  LEVEL               TYPE TLC  \\\n",
      "0      FJI         0      2  Sovereign country   1   \n",
      "1      TZA         0      2  Sovereign country   1   \n",
      "2      SAH         0      2      Indeterminate   1   \n",
      "3      CAN         0      2  Sovereign country   1   \n",
      "4      US1         1      2            Country   1   \n",
      "..     ...       ...    ...                ...  ..   \n",
      "172    SRB         0      2  Sovereign country   1   \n",
      "173    MNE         0      2  Sovereign country   1   \n",
      "174    KOS         0      2           Disputed   1   \n",
      "175    TTO         0      2  Sovereign country   1   \n",
      "176    SDS         0      2  Sovereign country   1   \n",
      "\n",
      "                           ADMIN  ...        FCLASS_TR     FCLASS_ID  \\\n",
      "0                           Fiji  ...             None          None   \n",
      "1    United Republic of Tanzania  ...             None          None   \n",
      "2                 Western Sahara  ...     Unrecognized  Unrecognized   \n",
      "3                         Canada  ...             None          None   \n",
      "4       United States of America  ...             None          None   \n",
      "..                           ...  ...              ...           ...   \n",
      "172           Republic of Serbia  ...             None          None   \n",
      "173                   Montenegro  ...             None          None   \n",
      "174                       Kosovo  ...  Admin-0 country  Unrecognized   \n",
      "175          Trinidad and Tobago  ...             None          None   \n",
      "176                  South Sudan  ...             None          None   \n",
      "\n",
      "           FCLASS_PL     FCLASS_GR        FCLASS_IT        FCLASS_NL  \\\n",
      "0               None          None             None             None   \n",
      "1               None          None             None             None   \n",
      "2       Unrecognized          None             None     Unrecognized   \n",
      "3               None          None             None             None   \n",
      "4               None          None             None             None   \n",
      "..               ...           ...              ...              ...   \n",
      "172             None          None             None             None   \n",
      "173             None          None             None             None   \n",
      "174  Admin-0 country  Unrecognized  Admin-0 country  Admin-0 country   \n",
      "175             None          None             None             None   \n",
      "176             None          None             None             None   \n",
      "\n",
      "           FCLASS_SE        FCLASS_BD     FCLASS_UA  \\\n",
      "0               None             None          None   \n",
      "1               None             None          None   \n",
      "2               None             None          None   \n",
      "3               None             None          None   \n",
      "4               None             None          None   \n",
      "..               ...              ...           ...   \n",
      "172             None             None          None   \n",
      "173             None             None          None   \n",
      "174  Admin-0 country  Admin-0 country  Unrecognized   \n",
      "175             None             None          None   \n",
      "176             None             None          None   \n",
      "\n",
      "                                              geometry  \n",
      "0    MULTIPOLYGON (((180 -16.06713, 180 -16.55522, ...  \n",
      "1    POLYGON ((33.90371 -0.95, 34.07262 -1.05982, 3...  \n",
      "2    POLYGON ((-8.66559 27.65643, -8.66512 27.58948...  \n",
      "3    MULTIPOLYGON (((-122.84 49, -122.97421 49.0025...  \n",
      "4    MULTIPOLYGON (((-122.84 49, -120 49, -117.0312...  \n",
      "..                                                 ...  \n",
      "172  POLYGON ((18.82982 45.90887, 18.82984 45.90888...  \n",
      "173  POLYGON ((20.0707 42.58863, 19.80161 42.50009,...  \n",
      "174  POLYGON ((20.59025 41.85541, 20.52295 42.21787...  \n",
      "175  POLYGON ((-61.68 10.76, -61.105 10.89, -60.895...  \n",
      "176  POLYGON ((30.83385 3.50917, 29.9535 4.1737, 29...  \n",
      "\n",
      "[177 rows x 169 columns]\n"
     ]
    }
   ],
   "source": [
    "print(world)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cuisine\n",
       "Modern Cuisine                   2735\n",
       "Traditional Cuisine               765\n",
       "Creative                          619\n",
       "Japanese                          534\n",
       "Contemporary                      461\n",
       "                                 ... \n",
       "Chinese, Shaanxi                    1\n",
       "Spanish, Small eats                 1\n",
       "South American, Asian               1\n",
       "Portuguese, Asian Influences        1\n",
       "South African, Modern Cuisine       1\n",
       "Name: count, Length: 1612, dtype: int64"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Cuisine'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "FacilitiesAndServices\n",
       "Air conditioning                                                                                                                       1492\n",
       "Air conditioning,Terrace                                                                                                                995\n",
       "Air conditioning,Counter dining                                                                                                         881\n",
       "Terrace                                                                                                                                 825\n",
       "Air conditioning,Wheelchair access                                                                                                      660\n",
       "                                                                                                                                       ... \n",
       "Air conditioning,Counter dining,Great view,Interesting wine list,Terrace,Valet parking,Wheelchair access                                  1\n",
       "Great view,Interesting wine list,Restaurant offering vegetarian menus,Terrace,Valet parking,Wheelchair access                             1\n",
       "Air conditioning,Car park,Great view,Interesting wine list,Notable sake list,Restaurant offering vegetarian menus,Wheelchair access       1\n",
       "Air conditioning,Great view,Restaurant offering vegetarian menus,Valet parking,Wheelchair access                                          1\n",
       "Air conditioning,Car park,Interesting wine list,Notable sake list,Wheelchair access                                                       1\n",
       "Name: count, Length: 878, dtype: int64"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['FacilitiesAndServices'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We observe as the Facilities and Services Variable as being composed of certain facilities.\n",
    "Let's see which are the unique values for facilities."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unique Facilities: {'Counter dining', 'Brunch', 'Valet parking', 'Booking essential', 'Restaurant offering vegetarian menus', 'Booking essential - dinner', 'Cash only - lunch', 'Interesting wine list', 'Notable sake list', 'Terrace', 'Air conditioning', 'Shoes must be removed', 'Great view', 'Garden or park', 'Cash only', 'Bring your own bottle', 'Car park', 'Credit cards not accepted', 'Wheelchair access', 'Foreign credit cards not accepted'}\n",
      "Number of Unique Facilities: 20\n"
     ]
    }
   ],
   "source": [
    "# Step 1: Fill NaN values with an empty string (so they don't cause errors)\n",
    "df['FacilitiesAndServices'] = df['FacilitiesAndServices'].fillna('')\n",
    "\n",
    "# Step 2: Split the 'FacilitiesAndServices' column into individual values\n",
    "facilities_series = df['FacilitiesAndServices'].str.split(',')\n",
    "\n",
    "# Step 3: Flatten the list of facilities\n",
    "facilities_flat = [item for sublist in facilities_series for item in sublist]\n",
    "\n",
    "# Step 4: Remove empty strings (in case there were empty values after splitting)\n",
    "facilities_flat = [facility for facility in facilities_flat if facility.strip()]\n",
    "\n",
    "# Step 5: Find unique facilities\n",
    "unique_facilities = set(facilities_flat)\n",
    "\n",
    "# Step 6: Count the number of unique facilities\n",
    "unique_facility_count = len(unique_facilities)\n",
    "\n",
    "# Output the results\n",
    "print(\"Unique Facilities:\", unique_facilities)\n",
    "print(\"Number of Unique Facilities:\", unique_facility_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Name                Location Price                    Cuisine  \\\n",
      "0           Taïrroir          Taipei, Taiwan  $$$$     Taiwanese contemporary   \n",
      "1          JL Studio        Taichung, Taiwan  $$$$  Singaporean, Contemporary   \n",
      "2          Le Palais          Taipei, Taiwan  $$$$                  Cantonese   \n",
      "3            Addison          San Diego, USA  $$$$  Contemporary, Californian   \n",
      "4      Atelier Crenn      San Francisco, USA  $$$$       Contemporary, French   \n",
      "...              ...                     ...   ...                        ...   \n",
      "17289     Kampa Park  Prague, Czech Republic   €€€             Modern Cuisine   \n",
      "17290     La Veranda  Prague, Czech Republic    €€      Mediterranean Cuisine   \n",
      "17291           Taro  Prague, Czech Republic   €€€                      Asian   \n",
      "17292         Bockem  Prague, Czech Republic   €€€        Czech, Contemporary   \n",
      "17293          Aromi  Prague, Czech Republic     €                    Italian   \n",
      "\n",
      "                                                     Url  \\\n",
      "0      https://guide.michelin.com/en/taipei-region/ta...   \n",
      "1      https://guide.michelin.com/en/taichung-region/...   \n",
      "2      https://guide.michelin.com/en/taipei-region/ta...   \n",
      "3      https://guide.michelin.com/en/california/us-sa...   \n",
      "4      https://guide.michelin.com/en/california/san-f...   \n",
      "...                                                  ...   \n",
      "17289  https://guide.michelin.com/en/prague/prague/re...   \n",
      "17290  https://guide.michelin.com/en/prague/prague/re...   \n",
      "17291  https://guide.michelin.com/en/prague/prague/re...   \n",
      "17292  https://guide.michelin.com/en/prague/prague/re...   \n",
      "17293  https://guide.michelin.com/en/prague/prague/re...   \n",
      "\n",
      "                      Award  GreenStar  \\\n",
      "0                   3 Stars          0   \n",
      "1                   3 Stars          0   \n",
      "2                   3 Stars          0   \n",
      "3                   3 Stars          0   \n",
      "4                   3 Stars          1   \n",
      "...                     ...        ...   \n",
      "17289  Selected Restaurants          0   \n",
      "17290  Selected Restaurants          0   \n",
      "17291  Selected Restaurants          0   \n",
      "17292  Selected Restaurants          0   \n",
      "17293  Selected Restaurants          0   \n",
      "\n",
      "                                   FacilitiesAndServices  Price_enc  \\\n",
      "0                     Air conditioning,Wheelchair access          4   \n",
      "1            Air conditioning,Car park,Wheelchair access          4   \n",
      "2            Air conditioning,Car park,Wheelchair access          4   \n",
      "3      Air conditioning,Car park,Garden or park,Inter...          4   \n",
      "4      Air conditioning,Interesting wine list,Wheelch...          4   \n",
      "...                                                  ...        ...   \n",
      "17289  Air conditioning,Booking essential - dinner,Gr...          3   \n",
      "17290                                   Air conditioning          2   \n",
      "17291                    Air conditioning,Counter dining          3   \n",
      "17292                                  Booking essential          3   \n",
      "17293     Air conditioning,Interesting wine list,Terrace          1   \n",
      "\n",
      "                City  ... Foreign credit cards not accepted  Garden or park  \\\n",
      "0             Taipei  ...                             False           False   \n",
      "1           Taichung  ...                             False           False   \n",
      "2             Taipei  ...                             False           False   \n",
      "3          San Diego  ...                             False            True   \n",
      "4      San Francisco  ...                             False           False   \n",
      "...              ...  ...                               ...             ...   \n",
      "17289         Prague  ...                             False           False   \n",
      "17290         Prague  ...                             False           False   \n",
      "17291         Prague  ...                             False           False   \n",
      "17292         Prague  ...                             False           False   \n",
      "17293         Prague  ...                             False           False   \n",
      "\n",
      "       Great view  Interesting wine list  Notable sake list  \\\n",
      "0           False                  False              False   \n",
      "1           False                  False              False   \n",
      "2           False                  False              False   \n",
      "3           False                   True              False   \n",
      "4           False                   True              False   \n",
      "...           ...                    ...                ...   \n",
      "17289        True                  False              False   \n",
      "17290       False                  False              False   \n",
      "17291       False                  False              False   \n",
      "17292       False                  False              False   \n",
      "17293       False                   True              False   \n",
      "\n",
      "       Restaurant offering vegetarian menus  Shoes must be removed  Terrace  \\\n",
      "0                                     False                  False    False   \n",
      "1                                     False                  False    False   \n",
      "2                                     False                  False    False   \n",
      "3                                     False                  False     True   \n",
      "4                                     False                  False    False   \n",
      "...                                     ...                    ...      ...   \n",
      "17289                                 False                  False     True   \n",
      "17290                                 False                  False    False   \n",
      "17291                                 False                  False    False   \n",
      "17292                                 False                  False    False   \n",
      "17293                                 False                  False     True   \n",
      "\n",
      "       Valet parking  Wheelchair access  \n",
      "0              False               True  \n",
      "1              False               True  \n",
      "2              False               True  \n",
      "3               True               True  \n",
      "4              False               True  \n",
      "...              ...                ...  \n",
      "17289          False              False  \n",
      "17290          False              False  \n",
      "17291          False              False  \n",
      "17292          False              False  \n",
      "17293          False              False  \n",
      "\n",
      "[17293 rows x 32 columns]\n"
     ]
    }
   ],
   "source": [
    "# Step 1: Fill NaN values with an empty string\n",
    "df['FacilitiesAndServices'] = df['FacilitiesAndServices'].fillna('')\n",
    "\n",
    "# Step 2: Split the 'FacilitiesAndServices' column into individual values\n",
    "df['FacilitiesList'] = df['FacilitiesAndServices'].str.split(',')\n",
    "\n",
    "# Step 3: Create dummy variables for each unique facility\n",
    "# Explode the list into individual rows, one facility per row\n",
    "df_exploded = df.explode('FacilitiesList')\n",
    "\n",
    "# Step 4: Remove any extra whitespace around the facility names\n",
    "df_exploded['FacilitiesList'] = df_exploded['FacilitiesList'].str.strip()\n",
    "\n",
    "# Step 5: Use pandas get_dummies to create one-hot encoding for each facility\n",
    "df_dummies = pd.get_dummies(df_exploded['FacilitiesList'])\n",
    "\n",
    "# Step 6: Group by the original index (to compress exploded rows back)\n",
    "# and aggregate using max to combine all dummy variables for each restaurant\n",
    "df_with_dummies = df.join(df_dummies.groupby(df_exploded.index).max())\n",
    "\n",
    "# Drop the temporary 'FacilitiesList' column\n",
    "df_with_dummies.drop(columns=['FacilitiesList'], inplace=True)\n",
    "\n",
    "print(df_with_dummies)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>Price</th>\n",
       "      <th>Cuisine</th>\n",
       "      <th>Url</th>\n",
       "      <th>Award</th>\n",
       "      <th>GreenStar</th>\n",
       "      <th>FacilitiesAndServices</th>\n",
       "      <th>Price_enc</th>\n",
       "      <th>City</th>\n",
       "      <th>...</th>\n",
       "      <th>Foreign credit cards not accepted</th>\n",
       "      <th>Garden or park</th>\n",
       "      <th>Great view</th>\n",
       "      <th>Interesting wine list</th>\n",
       "      <th>Notable sake list</th>\n",
       "      <th>Restaurant offering vegetarian menus</th>\n",
       "      <th>Shoes must be removed</th>\n",
       "      <th>Terrace</th>\n",
       "      <th>Valet parking</th>\n",
       "      <th>Wheelchair access</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Taïrroir</td>\n",
       "      <td>Taipei, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Taiwanese contemporary</td>\n",
       "      <td>https://guide.michelin.com/en/taipei-region/ta...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Wheelchair access</td>\n",
       "      <td>4</td>\n",
       "      <td>Taipei</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>JL Studio</td>\n",
       "      <td>Taichung, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Singaporean, Contemporary</td>\n",
       "      <td>https://guide.michelin.com/en/taichung-region/...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Wheelchair access</td>\n",
       "      <td>4</td>\n",
       "      <td>Taichung</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Le Palais</td>\n",
       "      <td>Taipei, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Cantonese</td>\n",
       "      <td>https://guide.michelin.com/en/taipei-region/ta...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Wheelchair access</td>\n",
       "      <td>4</td>\n",
       "      <td>Taipei</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addison</td>\n",
       "      <td>San Diego, USA</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Contemporary, Californian</td>\n",
       "      <td>https://guide.michelin.com/en/california/us-sa...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Garden or park,Inter...</td>\n",
       "      <td>4</td>\n",
       "      <td>San Diego</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Atelier Crenn</td>\n",
       "      <td>San Francisco, USA</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Contemporary, French</td>\n",
       "      <td>https://guide.michelin.com/en/california/san-f...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>1</td>\n",
       "      <td>Air conditioning,Interesting wine list,Wheelch...</td>\n",
       "      <td>4</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Name            Location Price                    Cuisine  \\\n",
       "0       Taïrroir      Taipei, Taiwan  $$$$     Taiwanese contemporary   \n",
       "1      JL Studio    Taichung, Taiwan  $$$$  Singaporean, Contemporary   \n",
       "2      Le Palais      Taipei, Taiwan  $$$$                  Cantonese   \n",
       "3        Addison      San Diego, USA  $$$$  Contemporary, Californian   \n",
       "4  Atelier Crenn  San Francisco, USA  $$$$       Contemporary, French   \n",
       "\n",
       "                                                 Url    Award  GreenStar  \\\n",
       "0  https://guide.michelin.com/en/taipei-region/ta...  3 Stars          0   \n",
       "1  https://guide.michelin.com/en/taichung-region/...  3 Stars          0   \n",
       "2  https://guide.michelin.com/en/taipei-region/ta...  3 Stars          0   \n",
       "3  https://guide.michelin.com/en/california/us-sa...  3 Stars          0   \n",
       "4  https://guide.michelin.com/en/california/san-f...  3 Stars          1   \n",
       "\n",
       "                               FacilitiesAndServices  Price_enc  \\\n",
       "0                 Air conditioning,Wheelchair access          4   \n",
       "1        Air conditioning,Car park,Wheelchair access          4   \n",
       "2        Air conditioning,Car park,Wheelchair access          4   \n",
       "3  Air conditioning,Car park,Garden or park,Inter...          4   \n",
       "4  Air conditioning,Interesting wine list,Wheelch...          4   \n",
       "\n",
       "            City  ... Foreign credit cards not accepted  Garden or park  \\\n",
       "0         Taipei  ...                             False           False   \n",
       "1       Taichung  ...                             False           False   \n",
       "2         Taipei  ...                             False           False   \n",
       "3      San Diego  ...                             False            True   \n",
       "4  San Francisco  ...                             False           False   \n",
       "\n",
       "   Great view  Interesting wine list  Notable sake list  \\\n",
       "0       False                  False              False   \n",
       "1       False                  False              False   \n",
       "2       False                  False              False   \n",
       "3       False                   True              False   \n",
       "4       False                   True              False   \n",
       "\n",
       "   Restaurant offering vegetarian menus  Shoes must be removed  Terrace  \\\n",
       "0                                 False                  False    False   \n",
       "1                                 False                  False    False   \n",
       "2                                 False                  False    False   \n",
       "3                                 False                  False     True   \n",
       "4                                 False                  False    False   \n",
       "\n",
       "   Valet parking  Wheelchair access  \n",
       "0          False               True  \n",
       "1          False               True  \n",
       "2          False               True  \n",
       "3           True               True  \n",
       "4          False               True  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_with_dummies.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Frequency of each facility:\n",
      "                                          884\n",
      "Air conditioning                        11343\n",
      "Booking essential                           7\n",
      "Booking essential - dinner                  4\n",
      "Bring your own bottle                      33\n",
      "Brunch                                    453\n",
      "Car park                                 5286\n",
      "Cash only                                 784\n",
      "Cash only - lunch                          33\n",
      "Counter dining                           2223\n",
      "Credit cards not accepted                 208\n",
      "Foreign credit cards not accepted          73\n",
      "Garden or park                           1473\n",
      "Great view                               1701\n",
      "Interesting wine list                    3190\n",
      "Notable sake list                         245\n",
      "Restaurant offering vegetarian menus     2363\n",
      "Shoes must be removed                      71\n",
      "Terrace                                  8087\n",
      "Valet parking                            1095\n",
      "Wheelchair access                        5589\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Step 7: Check frequency of each facility\n",
    "facility_frequencies = df_with_dummies.iloc[:,11:].sum()\n",
    "\n",
    "# Output the frequency of each facility\n",
    "print(\"Frequency of each facility:\")\n",
    "print(facility_frequencies)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Absolute values of restaurants for each award category:\n",
      "Award Category: Selected Restaurants, Absolute Count: 10509\n",
      "Award Category: Bib Gourmand, Absolute Count: 3240\n",
      "Award Category: 1 Star, Absolute Count: 2905\n",
      "Award Category: 2 Stars, Absolute Count: 494\n",
      "Award Category: 3 Stars, Absolute Count: 145\n",
      "\n",
      "Total number of restaurants: 17293\n"
     ]
    },
    {
     "data": {
      "image/png": "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AAAAABZC6AYAAAAAwEII3QAAAAAAWAihGwAAAAAACyF0AwAAAABgIYRuAAAAAAAshNANAAAAAICFELoBAAAAALAQQjcAAAAAABZC6AYAAAAAwEII3QDeKjt37lTt2rXl6ekpk8kkk8mkWbNmxdrm4sWLatmypbJkySJHR0elT59elStX1urVq1977IULF5qP+bJ/27dvlyTt379fJUuWVKpUqZQ/f36tWbMm1nHGjx8vHx8fPXr0KFHPHQAAAG+enbULAIA36ciRI9q0aZNy5Mih+/fvx3neMAzVrFlTgYGBcnR0VP78+RUYGKidO3dq165dOnr0qAoXLvzSY3t6eqp06dKx2q5evapbt25Jknx8fGQYhho3biw3Nzddv35djRs31ocffqjr168rTZo0unjxooYOHaqFCxcqbdq0if8GAAAA4I1ipBvAW6VVq1YKDg7Whg0bXvr8jRs3FBgYKEkaNmyYjhw5opUrV0p6EcivXbv2ymPXqVNH+/fvj/Uvffr0kqSaNWvK399f9+/f140bN1S0aFGlS5dOZcqUUWhoqC5cuCBJ6tKli2rUqKGmTZsm5mkDAADAShjpBvBW8fDweO3zGTJkUK5cuXThwgV99dVXWrJkiQIDA2VnZ6fWrVvrvffei/drrV+/XidPnpQk9e/fX5KUPn16ZcqUSUePHtXDhw+1f/9+ubi4KFeuXFqwYIEOHjyo06dP//sTBAAAQJKSpEe6x4wZo5IlSyp16tTy8vJSgwYNFBAQEGubsLAwde/eXR4eHnJ1dVWjRo10584dK1UMILmztbXVtm3bVLx4cYWHh+vo0aN6/Pix0qZNq2LFisnW1jbex5owYYIkqXDhwqpZs6YkyWQyafny5UqVKpUyZ86s27dva8mSJYqIiFC/fv00ZswYbd26Vbly5ZKnp6fatWunkJAQi5wrAAAALC9Jh+4dO3aoe/fu2r9/vzZt2qTIyEi98847Cg0NNW/Tp08f/f7771q2bJl27NihmzdvqmHDhlasGkByFh0dra5du+rw4cP65JNPFBISomXLlunevXvq0aOHfv3113gd5+jRo9q6daskqV+/frGeK1OmjA4dOqSnT5/qzJkzqlOnjnr16qW8efOqYsWKateunQoVKqTx48dr4cKFGjlyZGKfJgAAAN6QJB26169fr7Zt2yp//vwqXLiwFi5cqKtXr+rw4cOSpKCgIM2bN08TJ05UtWrVVLx4cS1YsEB79+7V/v37rVw9gORoy5Yt5tnE27RpIxcXF/PEZ5K0efPmeB3n66+/liRlyZJFzZo1e+22a9as0a+//qo5c+Zo+/btio6OVrt27dSuXTulS5dOmzZt+g9nBAAAAGtK0qH774KCgiRJ6dKlkyQdPnxYkZGRqlGjhnkbf39/Zc2aVfv27bNKjQCSt5ifM5J06NAhSdK5c+f05MkTSZKLi4ukFxOu+fv7y9/fX6tWrYp1jKtXr2rp0qWSpE8++UR2dq+ePiMkJETdunXT4MGDlTdvXhmGIUlycHCQJNnb2yfSmSGli89yeJJ04sQJNW7cWJ6ennJwcFCmTJniNXHfkSNH1KBBA2XMmFGOjo7y9vbWe++9p127dpm3YTk8AADiSjYTqUVHR6t3794qX768ChQoIEm6ffu2HBwclCZNmljbent76/bt2688Vnh4uMLDw82Pg4ODJUmRkZGKjIxM/OItxCb6ubVLeKskp76BV1u1apUGDx6s58//7/tnyJAh+vrrr1WyZElNmjRJadOm1aNHj9S1a1dNmTJFly9flmEYsre3V+PGjRUZGamnT5+a55h4+PBhrP4xceJEPX/+XO7u7mrXrt1r+85nn32m1KlTq1+/foqMjFTFihVlY2OjtWvXys3NTXfu3FGLFi3of/hHBw8e1KZNm+Tr62teDi8qKipW39mzZ49q166tZ8+eyc3NTfny5VNoaKhWr1792j72+PFjVa9eXY8fP5arq6vy5cunc+fOaf369dq2bZsuXbqk9OnTq3HjxkqdOrUCAwPVrFkzffjhhwoMDIy1HN7cuXPl6upKnwYAJHvx/X9Zsgnd3bt316lTp7R79+7/fKwxY8Zo2LBhcdo3btyoVKlS/efjvyl5rF3AW2btdWtXgMSwe/duXbx4MVbbvXv3dO/ePTk5OenAgQMaPny4li9frjNnzujcuXNydXWVv7+/mjRpops3b+rmzZuxJmw8fvy41q5dK0kKDQ3V7NmzJUlVq1aNNQr4dwEBAfruu+80evToWJeQf/zxx/r55581d+5cVa5cWSVLljQfH3gVLy8vLV68WI8fP1aXLl0kSadOnTL3HcMw1LNnTz179kyVK1fWxx9/LEdHR0nSs2fPXtvHzpw5o8ePH0uSunbtqgoVKmjLli369ttvFR4eruXLlytNmjS6ceOGKlWqpP3798vDw0OhoaFatGiRcuXKpSFDhqhAgQJycXGhPwMAUoSnT5/GazuTEXMtYxLWo0cPrV69Wjt37pSvr6+5fevWrapevboePXoUa7Q7W7Zs6t27t/r06fPS471spDtLliy6f/+++b7N5GDSiQfWLuGt0qfQ65eaAoCk4PLly8qdO7ckadq0aercubOkF38cKlmypCSpWbNm2rNnj4KCglSsWDGNHTtWxYoVe+UxHz16JH9/fz169Eiurq7y8/NTQECADMNQr169NGLECBmGoRw5cih16tTavn27mjVrpoMHDyowMFCrV6/Wp59+qmPHjilz5syWfxMAAHgDgoODlT59egUFBb02Rybpke6Yv8qvWrVK27dvjxW4Jal48eKyt7fXli1b1KhRI0kvRo6uXr2qsmXLvvK4jo6O5r/u/5W9vX2yun8y2iZJf3wpTnLqGwDeXn/9WWVra2t+fOnSJXP7L7/8ojx58igoKEjbt29XjRo1dPLkSWXPnv2lx/Ty8tKuXbtUv359Xbp0SUePHpX04o/cMf8vlqTly5erR48e8vX1Vfbs2bVkyRIZhqHPPvtMY8aM0a5duzR8+HAFBQWpbt26+vbbb+Xq6mqhdwIAAMuKbz5I0hOpde/eXT/++KN++uknpU6dWrdv39bt27f17NkzSZK7u7s6dOigvn37atu2bTp8+LDatWunsmXLqkyZMlauHgCApOOv8xh06NBBZ8+e1bFjx2Rra6uQkBAtXLjwlfuGhoaqbdu2unTpkr7++muFhITom2++0ZUrV/Thhx+aQzjL4QEAEFeSDt0zZ85UUFCQqlSpogwZMpj/LVmyxLzNpEmTVLduXTVq1EiVKlWSj4+PVq5cacWqAQBIejJlymT+OuYyc19fX3l6ekp6cVn6q/z000/m2fzbt28vFxcXtWvXTtKLq9K2bNny0v1YDg8AgGRwefk/cXJy0vTp0zV9+vQ3UBGAN2Hs0fvWLuGtMrBoemuXgDegVKlScnNzU3BwsA4dOqQuXbroypUrunfvniTJz89PkvTHH3+odevWkqRFixapVKlScZbSq1mzpjmES/+3lN5f/X05vJiAzXJ4AIC3TZIe6QYAAPGzcuVK5cqVS1WqVDG3DRkyRLly5VKLFi3k7OysoUOHSpLmzp2rvHnzqnDhwoqKipKPj495wrWY5fACAgLMs7LWrVvXHJbr1q2rQoUKqV69epJe3OrVoEGDOPUMGjRIbm5uGjRokCSpWrVqsrGx0fr163Xw4EHduXNH1atXt9C7AQBA0kHoBgAgBQgODtbFixd15coVc9u9e/d08eJF3bhxQ5LUp08fzZ07VwUKFFBgYKBSp06tVq1a6dChQ+bLzF/G399fO3bs0Pvvv6/06dMrICBAnp6e+vDDD7V3715lyJAh1vb79+/XrFmzNHfuXPOIdoECBTRnzhytWrVKNWvWVIsWLfTll19a4J0AACBpSRZLhllacHCw3N3d/3Gq96SGS3DfLC7BfXPo228WfRsAACDh4psjGekGAAAAAMBCCN0AAAAAAFgIoRsAAAAAAAtJ0kuGAQCQkjBfwZvFfAUAgKSAkW4AAAAAACyE0A0AAAAAgIUQugEAAAAAsBBCNwAAAAAAFkLoBgAAAADAQgjdAAAAAABYCKEbAAAAAAALIXQDAAAAAGAhhG4AAAAAACyE0A0AAAAAgIUQugEAAAAAsBBCNwAAAAAAFkLoBgAAAADAQgjdAAAAAABYCKEbAAAAAAALIXQDAAAAAGAhhG4AAAAAACyE0A0AAAAAgIUQugEAAAAAsBBCNwAAAAAAFkLoBgAAAADAQgjdAAAAAABYCKEbAAAAAAALIXQDAAAAAGAhhG4AAAAAACyE0A0AAAAAgIUQugEAAAAAsBBCNwAAAAAAFkLoBgAAAADAQgjdAAAAAABYCKEbAAAAAAALIXQDAAAAAGAhhG4AAAAAACyE0A0AAAAAgIUQugEAAAAAsBBCNwAAAAAAFkLoBgAAAADAQgjdAAAAAABYCKEbAAAAAAALIXQDAAAAAGAhhG4AAAAAACyE0A0AAAAAgIUQugEAAJCsfPPNN6pSpYoyZMggR0dHZcuWTW3atNGlS5deu19ISIi++uor+fv7y9nZWRkzZlS3bt306NEj8za3b9/W+++/Lzc3N2XOnFljxoyJdYz9+/fL3t5ee/bssci5AUh5CN0AAABIVr799lvt3LlTadKkUaZMmXT16lUtWrRI5cuXV3Bw8Cv3q1evnoYPH64LFy4od+7cCgkJ0axZs/TOO+/o+fPnkqRPP/1Ua9eu1R9//KF27dpp8ODB2rRpkyQpMjJSnTp1UqdOnVS+fPk3cq4Akj9CNwAAAJKVTp066fLly/rzzz916dIl9e7dW9KLUeotW7a8dJ8zZ85o+/btkqQpU6bo+PHjOnz4sCTp0KFDWrp0qSTp2LFj8vLykr+/vypWrChJOn78uCRp7NixevTokcaOHWvBswOQ0hC6AQAAkKx8/vnnypo1q/lxTDiWJEdHx5fuEx0dbf7axsYm1n8lafPmzZKkIkWK6O7duwoICNCuXbskSYULF9bZs2c1atQozZgxQ25ubol3MgBSPEI3AAAAkq2oqCjNnj1bkpQjRw5Vr179pdvlzZtXBQoUkCT17NlTRYoUUbFixczP37hxQ9KL+8Xfe+89lSxZUvPnz9fo0aNVo0YNde7cWfXr11eGDBlUqlQppUmTRtWrV9eFCxcsfIYAkjs7axcAAAAA/BuhoaFq3ry5NmzYIB8fH/3++++vHOm2tbXVunXrNHDgQG3evFmXLl1SpUqVdPbsWV28eFH29vaSJB8fH/3222+x9p01a5ZOnTqlH3/8URUqVJCDg4OWL1+upk2bqmXLltq/f7/FzxVA8kXoBgAAQLJz+/Zt1a1bV4cPH1bu3Lm1bt065ciR47X7ZM6cWT/++KP5cVhYmHx8fCRJefLkeek+N2/e1MCBAzVx4kQFBQXp2rVr6tu3r2rUqKGqVatq5cqVevLkiVKnTp14JwcgReHycgAAACQrp0+fVpkyZXT48GFVrFhR+/btixO4q1evLn9/fw0aNMjcduTIET158kTSi8vS+/fvr6CgIEnShx9++NLX6t69u4oXL6727dvLMAxJkoODgySZR8cB4HUI3QAAAEhWGjZsqCtXrkiSnjx5otq1a6tMmTIqU6aM5s6dK0m6ePGiAgICdOvWLfN+8+fPl5eXlwoWLCgfHx9NmzZNktS7d2+VKlUqzuusWLFCGzZsMN8z7u/vr8yZM2vr1q26c+eO9uzZo5IlSzLKjUT1yy+/qFixYnJ2dla6dOnUuHFjXbx48bX73L17V926dVP27Nnl5OSktGnTqlSpUpo/f755G9agtx5CNwAAAJKV8PBw89fHjh3TgQMHzP+uX7/+yv1KlSqlHDly6NKlSwoNDVXx4sU1d+5cTZo0Kc62QUFB6tmzp4YOHaqcOXNKejHCvWzZMkVGRipnzpzy9fWNdbk68F/NmzdPzZs319GjR5UhQwZFRUVpxYoVKleunG7fvv3K/Zo2bapZs2bp+vXr8vf3l4ODgw4ePKgOHTro999/l8Qa9NbEPd0AAABIVi5fvvyvtmndurVat24dr9dwd3fXzZs347SXKVNGR44cidcxgISIiIjQwIEDJUmNGjXS8uXLdfPmTfn7++vu3bsaPXq0pk6dGmc/wzC0d+9eSS/WsJ85c6YCAwPNt1zEXBXyqjXoa9asyRr0FsZINwAAAABY2cGDB3X//n1JL0K3JGXMmFFlypSRJK1fv/6l+5lMJvPo9Jw5c1SkSBGVKVNGJpNJ9evXV9u2bSWxBr01MdINAAAAAFZ27do189deXl7mr729vSVJV69efeW+q1atUrNmzbRhwwYdP35ckpQ6dWoVLVpUqVKlkvRiDfonT56Y5yGIWYO+cuXKsdagP3funIoXL67vvvtOuXLlssSpvnUY6QYAAACAJCpm1vzXGTRokDZs2KDGjRsrKChIu3btUnh4uIYNG2a+JD1mDfrg4GDduHFDgwYN0nfffadTp07p66+/VqNGjfTw4UMtX75cR48eVcuWLS19am8NRroBAADwn4w9et/aJbw1BhZNb+0SYCFZsmQxf3337t04X2fNmvWl+50/f16zZs2SJH300Udyc3NThQoV5O/vrxMnTmjz5s3q3bt3nP1Yg/7NYaQbAAAAAKysZMmS8vDwkPRiuTrpRTDev3+/JOndd9+V9GLpOn9/f/OSdzFrzUvSoUOHJEkPHjwwTybo4uLy0tdjDfo3h9ANAAAAAFbm4OCg0aNHS3oRunPkyKG8efPqyZMnSp8+vXlm84CAAAUEBJgnXStcuLB5WbvRo0crX7588vPzU3BwsCS9dMZ+1qB/swjdAAAAAJAEdO7cWT/++KOKFCmimzdvymQyqWHDhtq7d68yZsz40n3s7e21fft2de3aVb6+vgoMDJSdnZ2qVKmitWvXqk6dOrG2Zw36N497ugEAAAAgiWjRooVatGjxyudfNrFa5syZNXPmzHgdnzXo3zxGugEAAAAAsBBCNwAAAAAAFpJiQvf06dOVPXt2OTk5qXTp0vrjjz+sXRIAAAAA4C2XIu7pXrJkifr27atZs2apdOnSmjx5smrVqqWAgAB5eXlZuzwAAAAAyRBr0L85KXkN+hQx0j1x4kR16tRJ7dq1U758+TRr1iylSpVK8+fPt3ZpAAAAAIC3WLIf6Y6IiNDhw4c1aNAgc5uNjY1q1Kihffv2vXSf8PBwhYeHmx/HLCj/8OFDRUZGWrbgRBQR/MjaJbxVHjwwWbuEtwZ9+82ib7859O03i7795tC33xz69ZtF335zkmPffvLkiaSXzyj/V8k+dN+/f19RUVHy9vaO1e7t7a2zZ8++dJ8xY8Zo2LBhcdp9fX0tUiNShq+sXQBgIfRtpFT0baRE9GukVMm5bz958kTu7u6vfD7Zh+5/Y9CgQerbt6/5cXR0tB4+fCgPDw+ZTMnvLyzJSXBwsLJkyaJr167Jzc3N2uUAiYa+jZSKvo2Uir6NlIq+/eYYhqEnT54oY8aMr90u2Yfu9OnTy9bWVnfu3InVfufOHfn4+Lx0H0dHRzk6OsZqS5MmjaVKxEu4ubnxQwApEn0bKRV9GykVfRspFX37zXjdCHeMZD+RmoODg4oXL64tW7aY26Kjo7VlyxaVLVvWipUBAAAAAN52yX6kW5L69u2rNm3aqESJEipVqpQmT56s0NBQtWvXztqlAQAAAADeYikidH/44Ye6d++ehgwZotu3b6tIkSJav359nMnVYH2Ojo766quv4lzeDyR39G2kVPRtpFT0baRU9O2kx2T80/zmAAAAAADgX0n293QDAAAAAJBUEboBAAAAALAQQjcAAAAAABZC6AYAAAAAwEII3QCQTJ09e9baJQBmMfOyRkdHW7kSAACSFkI3EE8xv1A+ffrUypUA0qpVq9S0aVMtWbLE2qUAkiSTyaSffvpJH3zwgZ4/f27tcoBEFfM7wJMnT6xcCZC46NtvBqEbiAfDMGQymbRlyxYNHTpUp0+ftnZJeMv5+PjIz89Ps2bN0tKlS61dDqArV65owoQJqlmzpmxs+PUCKUfM7wAbNmxQ9+7ddfjwYWuXBCQK+vabw/8VgXgwmUxasWKF3n//fbm7u5tHcVjmHtZgGIbKli2rYcOGKXPmzPruu++0atUqa5eFt9jRo0f19ddfK3/+/OrYsSM/G5GixPwO0LBhQ+XJk8fcv+nnSO7o22+OnbULAJKDw4cPq3v37poyZYo6dOhgbr9z5458fHysWBneRtHR0bK1tZWzs7OyZs2q3bt3a9iwYbK1tVX9+vWtXR7eMs+ePdO3336rNWvWKGvWrHJycpIkRUVFydbW1srVAf/dyZMn9cknn2jy5Mnq1KmTuf3y5cvy9fW1YmXAf0PffnMY6QZeISoqyvx1QECAMmfOrA4dOigsLEy//PKL6tSpowoVKmjo0KHWKxJvJVtbWy1fvlwlS5ZUSEiIKleurHv37mnMmDFavny5tcvDWyJmJMTZ2VmDBw/WBx98oPPnz2vChAmSXvRTJlVDcvXXkb5Hjx7Jzc1NnTp10rNnzzR//nzVrFlTxYsXV5cuXaxYJZBw9G3rYKQb+P9i7mt59OiR0qZNK1tbW+3du1dZsmRR2rRpFRQUpF69eunYsWNKkyaN0qdPr1q1aql3796qXr26KlasaO1TwFvi7t27GjlypAYOHKgBAwZIkvbt26cJEybo66+/loODAyPesJiYn5UxV1xER0crV65cGjBggJ4/f66VK1cqVapU6t69u2xsbBQdHc093kh2TCaTli9frj179qhFixYKDQ3Vhx9+qEuXLiljxozKmzevunfvroYNG6pu3bqqV6+etUsG4oW+bR2EbuD/M5lMun37ttq2basmTZooXbp0atSokfbs2aNSpUqpdevW2rZtm4oUKaLWrVurRIkSun37tn766Se5uLhYu3y8RRwdHRUcHKzUqVOb28qWLav+/furQYMGGj58uEJCQvTRRx9ZsUqkRDGBe+vWrfr111917949Va5cWY0bN1aOHDk0YMAAjR8/Xj/++KNsbW3VtWtXAjeSpT///FOfffaZvvjiC+XKlUsjRozQqlWrVK1aNbVp00Z58+ZVVFSUKlSooFSpUlm7XCDe6NvWYTK4Ux4wu3z5skaOHKndu3fr8uXLmjdvnlq0aCHpxX204eHhcnZ2Nm8/ZMgQ/fLLL9qxY4cyZMhgrbLxFjEMQw8fPlSjRo1Uvnx5DRs2TDY2NuZg07RpU+3bt0/FixfXokWL5ObmZuWKkdKsWrVKrVq1UuvWrfX48WPduHFDnp6emj59ury9vXXu3Dl988032rlzpz799FN17NjR2iUDCXL69Gn98ssvunfvnqZPn26emyDmj04xhgwZou+//167d+9WlixZrFUuEG/0bethpBv4i+zZs6tevXpauHChsmbNqrCwMPNzhmGYA/emTZu0fPlyrVixQps2bSJww2Ji/kf45MkTpUqVSra2tvLw8ND777+vAQMGKF++fGratKk5dLu7u6tHjx5q27YtgRuJ7vDhwxowYIAmT56sjh076vr16ypcuLBSpUql1q1ba9GiRcqdO7d69+4tR0dH1ahRw9olA/FmGIZCQkLU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6NGjR+bA/ccff2jixIk6fvy4tm/fTuCGRR08eFCBgYEqUqSIbGxsZBiGChYsqC1btqhixYqqXr26ihYtqnbt2unnn3+Wl5cXV10AAAAgQeKukQNYyP3791WoUCF16NBBFy5cUP78+dWpUycNHTpUkvTo0SOVLFlSnTt31oYNG1SkSBGr1ouUL3Xq1DKZTDp79qykF5ecly5dWhUrVtTz58+VJUsWjRgxQg8fPnzpkmIAAADAP+G3SCSqmPuxo6KiFBkZGeu5mzdv6urVqwoICFDNmjVVu3ZtzZw5U5K0du1affzxxwoODla1atXMl/ICllSjRg3Z2dlp6tSp5raoqChJkp2dnQzD0J9//qkiRYrIxcXFWmUCAAAgGSN0I9HELL907tw59ejRQ3Xr1tWQIUN05coVSVLVqlWVKVMmFStWTBUrVtR3331n3nfHjh169OiROfAAlhYdHS1vb28NHDhQ8+fPV8+ePWUYhvle7adPn2rw4MH6+eefNWDAADk7O1u5YgAAACRH3NONRBETuI8fP6533nlH5cqVk6enp8aNG6crV65o/vz58vb2Ni+35OHhoXv37unevXv64YcfNGfOHO3cuVPp0qWz9qngLRFzuXjLli318OFDTZo0SUePHlW1atUUFhamc+fOae/evdqwYYPy5s1r5WoBAACQXDF7ORLNiRMnVKFCBfXq1UsjR46UJPXt21eTJ0/Wnj17VLZsWUVGRurLL7/Upk2bdOLECRUoUEDPnz/XDz/8wD3csJr79+9r7969GjlypIKCguTq6qry5cure/fuypMnz/9r786ja7wTP45/sjSkiSTWRBJLLUmsozIkKEKHWGo4oUppmkgQKsMUo1RVJsxY6tDhjMjIagkxlhKiYUbs+041toN0wogSpJJIcvP7wy+3zdF2VMXN8n6dc09Onue5534e5/7hk+/ymDoeAAAAyjFKN16I7OxsNW3aVDVr1tS5c+eMx4ODgxUTE6Ndu3apTp068vDwkCTl5ORoz549cnV1Ve3atVWnTh1TRUcFVvxs+P91rFhhYaGys7NlbW0tS0tLNk8DAADAr0bpxgsTFRWlDz74QNOmTdOMGTM0d+5cffrpp/L09JSbm5s2bNigbt26qVmzZho8eLBee+01OTg4mDo2KqjCwkKZmZnJ3Nxcly9fVm5urqysrOTm5ma85ocF/OfK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",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Print absolute values for each award category\n",
    "print(\"Absolute values of restaurants for each award category:\")\n",
    "for award, abs_value in award_counts.items():\n",
    "    print(f\"Award Category: {award}, Absolute Count: {abs_value}\")\n",
    "\n",
    "# Step 3: Calculate total number of restaurants for the overall category\n",
    "total_restaurants = len(df_with_dummies)\n",
    "print(f\"\\nTotal number of restaurants: {total_restaurants}\")\n",
    "\n",
    "# Step 1: Calculate the percentage of each award type\n",
    "award_counts = df_with_dummies['Award'].value_counts()\n",
    "award_percentages = (award_counts / award_counts.sum()) * 100\n",
    "\n",
    "# Step 2: Plot the data\n",
    "plt.figure(figsize=(10, 6))\n",
    "award_percentages.plot(kind='bar', color='skyblue')\n",
    "plt.title('Percentage of Each Award Type of Restaurants')\n",
    "plt.xlabel('Award Type')\n",
    "plt.ylabel('Percentage (%)')\n",
    "plt.xticks(rotation=45)\n",
    "plt.ylim(0, 100)  # Set y-axis limits from 0 to 100\n",
    "plt.grid(axis='y')\n",
    "\n",
    "# Display the percentage on top of the bars\n",
    "for i, v in enumerate(award_percentages):\n",
    "    plt.text(i, v + 1, f\"{v:.1f}%\", ha='center', fontweight='bold')\n",
    "\n",
    "plt.tight_layout()  # Adjust layout for better fit\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Absolute values of restaurants for each price category:\n",
      "Price Category: 2, Absolute Count: 7104\n",
      "Price Category: 3, Absolute Count: 5393\n",
      "Price Category: 4, Absolute Count: 3231\n",
      "Price Category: 1, Absolute Count: 1565\n",
      "\n",
      "Total number of restaurants: 17293\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(\"Absolute values of restaurants for each price category:\")\n",
    "for price, abs_value in price_counts.items():\n",
    "    print(f\"Price Category: {price}, Absolute Count: {abs_value}\")\n",
    "\n",
    "# Step 3: Calculate total number of restaurants for the overall category\n",
    "total_restaurants = len(df_with_dummies)\n",
    "print(f\"\\nTotal number of restaurants: {total_restaurants}\")\n",
    "\n",
    "\n",
    "# Step 1: Calculate the percentage of each price category\n",
    "price_counts = df_with_dummies['Price_enc'].value_counts()\n",
    "price_percentages = (price_counts / price_counts.sum()) * 100\n",
    "\n",
    "# Step 2: Plot the data\n",
    "plt.figure(figsize=(10, 6))\n",
    "price_percentages.plot(kind='bar', color='lightcoral')\n",
    "plt.title('Percentage of Each Price Category of Restaurants')\n",
    "plt.xlabel('Price Category')\n",
    "plt.ylabel('Percentage (%)')\n",
    "plt.xticks(rotation=45)\n",
    "plt.ylim(0, 100)  # Set y-axis limits from 0 to 100\n",
    "plt.grid(axis='y')\n",
    "\n",
    "# Display the percentage on top of the bars\n",
    "for i, v in enumerate(price_percentages):\n",
    "    plt.text(i, v + 1, f\"{v:.1f}%\", ha='center', fontweight='bold')\n",
    "\n",
    "plt.tight_layout()  # Adjust layout for better fit\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>Price</th>\n",
       "      <th>Cuisine</th>\n",
       "      <th>Url</th>\n",
       "      <th>Award</th>\n",
       "      <th>GreenStar</th>\n",
       "      <th>FacilitiesAndServices</th>\n",
       "      <th>Price_enc</th>\n",
       "      <th>City</th>\n",
       "      <th>...</th>\n",
       "      <th>Great view</th>\n",
       "      <th>Interesting wine list</th>\n",
       "      <th>Notable sake list</th>\n",
       "      <th>Restaurant offering vegetarian menus</th>\n",
       "      <th>Shoes must be removed</th>\n",
       "      <th>Terrace</th>\n",
       "      <th>Valet parking</th>\n",
       "      <th>Wheelchair access</th>\n",
       "      <th>Total Facilities</th>\n",
       "      <th>Count of True Facilities</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Taïrroir</td>\n",
       "      <td>Taipei, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Taiwanese contemporary</td>\n",
       "      <td>https://guide.michelin.com/en/taipei-region/ta...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Wheelchair access</td>\n",
       "      <td>4</td>\n",
       "      <td>Taipei</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>JL Studio</td>\n",
       "      <td>Taichung, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Singaporean, Contemporary</td>\n",
       "      <td>https://guide.michelin.com/en/taichung-region/...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Wheelchair access</td>\n",
       "      <td>4</td>\n",
       "      <td>Taichung</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Le Palais</td>\n",
       "      <td>Taipei, Taiwan</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Cantonese</td>\n",
       "      <td>https://guide.michelin.com/en/taipei-region/ta...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Wheelchair access</td>\n",
       "      <td>4</td>\n",
       "      <td>Taipei</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Addison</td>\n",
       "      <td>San Diego, USA</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Contemporary, Californian</td>\n",
       "      <td>https://guide.michelin.com/en/california/us-sa...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Car park,Garden or park,Inter...</td>\n",
       "      <td>4</td>\n",
       "      <td>San Diego</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>7</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Atelier Crenn</td>\n",
       "      <td>San Francisco, USA</td>\n",
       "      <td>$$$$</td>\n",
       "      <td>Contemporary, French</td>\n",
       "      <td>https://guide.michelin.com/en/california/san-f...</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>1</td>\n",
       "      <td>Air conditioning,Interesting wine list,Wheelch...</td>\n",
       "      <td>4</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17289</th>\n",
       "      <td>Kampa Park</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>€€€</td>\n",
       "      <td>Modern Cuisine</td>\n",
       "      <td>https://guide.michelin.com/en/prague/prague/re...</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Booking essential - dinner,Gr...</td>\n",
       "      <td>3</td>\n",
       "      <td>Prague</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>4</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17290</th>\n",
       "      <td>La Veranda</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>€€</td>\n",
       "      <td>Mediterranean Cuisine</td>\n",
       "      <td>https://guide.michelin.com/en/prague/prague/re...</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning</td>\n",
       "      <td>2</td>\n",
       "      <td>Prague</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17291</th>\n",
       "      <td>Taro</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>€€€</td>\n",
       "      <td>Asian</td>\n",
       "      <td>https://guide.michelin.com/en/prague/prague/re...</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Counter dining</td>\n",
       "      <td>3</td>\n",
       "      <td>Prague</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17292</th>\n",
       "      <td>Bockem</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>€€€</td>\n",
       "      <td>Czech, Contemporary</td>\n",
       "      <td>https://guide.michelin.com/en/prague/prague/re...</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0</td>\n",
       "      <td>Booking essential</td>\n",
       "      <td>3</td>\n",
       "      <td>Prague</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17293</th>\n",
       "      <td>Aromi</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>€</td>\n",
       "      <td>Italian</td>\n",
       "      <td>https://guide.michelin.com/en/prague/prague/re...</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0</td>\n",
       "      <td>Air conditioning,Interesting wine list,Terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Prague</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>3</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17293 rows × 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Name                Location Price                    Cuisine  \\\n",
       "0           Taïrroir          Taipei, Taiwan  $$$$     Taiwanese contemporary   \n",
       "1          JL Studio        Taichung, Taiwan  $$$$  Singaporean, Contemporary   \n",
       "2          Le Palais          Taipei, Taiwan  $$$$                  Cantonese   \n",
       "3            Addison          San Diego, USA  $$$$  Contemporary, Californian   \n",
       "4      Atelier Crenn      San Francisco, USA  $$$$       Contemporary, French   \n",
       "...              ...                     ...   ...                        ...   \n",
       "17289     Kampa Park  Prague, Czech Republic   €€€             Modern Cuisine   \n",
       "17290     La Veranda  Prague, Czech Republic    €€      Mediterranean Cuisine   \n",
       "17291           Taro  Prague, Czech Republic   €€€                      Asian   \n",
       "17292         Bockem  Prague, Czech Republic   €€€        Czech, Contemporary   \n",
       "17293          Aromi  Prague, Czech Republic     €                    Italian   \n",
       "\n",
       "                                                     Url  \\\n",
       "0      https://guide.michelin.com/en/taipei-region/ta...   \n",
       "1      https://guide.michelin.com/en/taichung-region/...   \n",
       "2      https://guide.michelin.com/en/taipei-region/ta...   \n",
       "3      https://guide.michelin.com/en/california/us-sa...   \n",
       "4      https://guide.michelin.com/en/california/san-f...   \n",
       "...                                                  ...   \n",
       "17289  https://guide.michelin.com/en/prague/prague/re...   \n",
       "17290  https://guide.michelin.com/en/prague/prague/re...   \n",
       "17291  https://guide.michelin.com/en/prague/prague/re...   \n",
       "17292  https://guide.michelin.com/en/prague/prague/re...   \n",
       "17293  https://guide.michelin.com/en/prague/prague/re...   \n",
       "\n",
       "                      Award  GreenStar  \\\n",
       "0                   3 Stars          0   \n",
       "1                   3 Stars          0   \n",
       "2                   3 Stars          0   \n",
       "3                   3 Stars          0   \n",
       "4                   3 Stars          1   \n",
       "...                     ...        ...   \n",
       "17289  Selected Restaurants          0   \n",
       "17290  Selected Restaurants          0   \n",
       "17291  Selected Restaurants          0   \n",
       "17292  Selected Restaurants          0   \n",
       "17293  Selected Restaurants          0   \n",
       "\n",
       "                                   FacilitiesAndServices  Price_enc  \\\n",
       "0                     Air conditioning,Wheelchair access          4   \n",
       "1            Air conditioning,Car park,Wheelchair access          4   \n",
       "2            Air conditioning,Car park,Wheelchair access          4   \n",
       "3      Air conditioning,Car park,Garden or park,Inter...          4   \n",
       "4      Air conditioning,Interesting wine list,Wheelch...          4   \n",
       "...                                                  ...        ...   \n",
       "17289  Air conditioning,Booking essential - dinner,Gr...          3   \n",
       "17290                                   Air conditioning          2   \n",
       "17291                    Air conditioning,Counter dining          3   \n",
       "17292                                  Booking essential          3   \n",
       "17293     Air conditioning,Interesting wine list,Terrace          1   \n",
       "\n",
       "                City  ... Great view  Interesting wine list  \\\n",
       "0             Taipei  ...      False                  False   \n",
       "1           Taichung  ...      False                  False   \n",
       "2             Taipei  ...      False                  False   \n",
       "3          San Diego  ...      False                   True   \n",
       "4      San Francisco  ...      False                   True   \n",
       "...              ...  ...        ...                    ...   \n",
       "17289         Prague  ...       True                  False   \n",
       "17290         Prague  ...      False                  False   \n",
       "17291         Prague  ...      False                  False   \n",
       "17292         Prague  ...      False                  False   \n",
       "17293         Prague  ...      False                   True   \n",
       "\n",
       "       Notable sake list  Restaurant offering vegetarian menus  \\\n",
       "0                  False                                 False   \n",
       "1                  False                                 False   \n",
       "2                  False                                 False   \n",
       "3                  False                                 False   \n",
       "4                  False                                 False   \n",
       "...                  ...                                   ...   \n",
       "17289              False                                 False   \n",
       "17290              False                                 False   \n",
       "17291              False                                 False   \n",
       "17292              False                                 False   \n",
       "17293              False                                 False   \n",
       "\n",
       "       Shoes must be removed  Terrace  Valet parking  Wheelchair access  \\\n",
       "0                      False    False          False               True   \n",
       "1                      False    False          False               True   \n",
       "2                      False    False          False               True   \n",
       "3                      False     True           True               True   \n",
       "4                      False    False          False               True   \n",
       "...                      ...      ...            ...                ...   \n",
       "17289                  False     True          False              False   \n",
       "17290                  False    False          False              False   \n",
       "17291                  False    False          False              False   \n",
       "17292                  False    False          False              False   \n",
       "17293                  False     True          False              False   \n",
       "\n",
       "       Total Facilities  Count of True Facilities  \n",
       "0                     2                        16  \n",
       "1                     3                        24  \n",
       "2                     3                        24  \n",
       "3                     7                        56  \n",
       "4                     3                        24  \n",
       "...                 ...                       ...  \n",
       "17289                 4                        32  \n",
       "17290                 1                         8  \n",
       "17291                 2                        16  \n",
       "17292                 1                         8  \n",
       "17293                 3                        24  \n",
       "\n",
       "[17293 rows x 34 columns]"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_with_dummies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Absolute values of restaurants for each number of facilities:\n",
      "Number of Facilities: 1, Absolute Count: 4177\n",
      "Number of Facilities: 2, Absolute Count: 5154\n",
      "Number of Facilities: 3, Absolute Count: 3886\n",
      "Number of Facilities: 4, Absolute Count: 2299\n",
      "Number of Facilities: 5, Absolute Count: 1103\n",
      "Number of Facilities: 6, Absolute Count: 482\n",
      "Number of Facilities: 7, Absolute Count: 144\n",
      "Number of Facilities: 8, Absolute Count: 41\n",
      "Number of Facilities: 9, Absolute Count: 7\n",
      "\n",
      "Total number of restaurants: 17293\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(\"Absolute values of restaurants for each number of facilities:\")\n",
    "for count, abs_value in facility_counts.items():\n",
    "    print(f\"Number of Facilities: {count}, Absolute Count: {abs_value}\")\n",
    "\n",
    "# Step 3: Calculate total number of restaurants for the overall category\n",
    "total_restaurants = len(df_with_dummies)\n",
    "print(f\"\\nTotal number of restaurants: {total_restaurants}\")\n",
    "\n",
    "# Step 2: Calculate the frequency of each total facilities count\n",
    "facility_counts = df_with_dummies['Total Facilities'].value_counts().sort_index()\n",
    "\n",
    "# Step 3: Calculate the percentage for each count\n",
    "facility_percentage = (facility_counts / len(df_with_dummies)) * 100\n",
    "\n",
    "# Step 4: Plot the percentage distribution\n",
    "plt.figure(figsize=(10, 6))\n",
    "facility_percentage.plot(kind='bar', color='lightskyblue')\n",
    "plt.title('Percentage of Total Facilities in Restaurants')\n",
    "plt.xlabel('Number of Facilities')\n",
    "plt.ylabel('Percentage (%)')\n",
    "plt.xticks(rotation=0)\n",
    "plt.ylim(0, 100)  # Set y-axis limit to 100%\n",
    "plt.grid(axis='y')\n",
    "\n",
    "# Display the percentage on top of the bars\n",
    "for i, v in enumerate(facility_percentage):\n",
    "    plt.text(i, v + 0.5, f\"{v:.1f}%\", ha='center', fontweight='bold')\n",
    "\n",
    "plt.tight_layout()  # Adjust layout for better fit\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Preprocessing\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 1: Preprocess the dataset\n",
    "\n",
    "# One-hot encode 'Cuisine'\n",
    "encoder_cuisine = OneHotEncoder(sparse_output=False)\n",
    "X_cuisine = encoder_cuisine.fit_transform(df_with_dummies[['Cuisine']])\n",
    "\n",
    "# One-hot encode 'City' and 'Country'\n",
    "encoder_location_city = OneHotEncoder(sparse_output=False)\n",
    "X_city = encoder_location_city.fit_transform(df_with_dummies[['City']])\n",
    "\n",
    "encoder_location_country = OneHotEncoder(sparse_output=False)\n",
    "X_country = encoder_location_country.fit_transform(df_with_dummies[['Country']])\n",
    "\n",
    "# Encode 'Price' as the count of dollar signs\n",
    "X_price = df_with_dummies[['Price_enc']].values  # Convert to numpy array\n",
    "\n",
    "# One-hot encode 'FacilitiesAndServices'\n",
    "encoder_facilities = OneHotEncoder(sparse_output=False)\n",
    "X_facilities = encoder_facilities.fit_transform(df_with_dummies[['Total Facilities']])\n",
    "\n",
    "# Label encode the target variable 'Award'\n",
    "label_encoder = LabelEncoder()\n",
    "y = label_encoder.fit_transform(df_with_dummies['Award'])  # Convert awards to numeric labels\n",
    "\n",
    "# Combine the encoded features\n",
    "X = np.hstack([X_cuisine, X_city, X_country, X_price, X_facilities])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "#split into train and test\n",
    "X_train, X_test, y_train, y_test, train_indices, test_indices = train_test_split(\n",
    "    X, y, df_with_dummies.index, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Random Forest Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Random Forest\n",
    "rf_model = RandomForestClassifier(n_estimators=10, random_state=42)\n",
    "rf_model.fit(X_train, y_train)\n",
    "y_pred_rf = rf_model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "rf_probs = rf_model.predict_proba(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([4, 4, 4, ..., 4, 4, 4])"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred_rf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "rf_pred_df = pd.DataFrame(y_pred_rf, columns=[f'RF_Pred_Class'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_Pred_Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      RF_Pred_Class\n",
       "0                 4\n",
       "1                 4\n",
       "2                 4\n",
       "3                 1\n",
       "4                 4\n",
       "...             ...\n",
       "3454              4\n",
       "3455              4\n",
       "3456              4\n",
       "3457              4\n",
       "3458              4\n",
       "\n",
       "[3459 rows x 1 columns]"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_pred_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2, 3, 4])"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get class labels (award categories)\n",
    "class_labels = rf_model.classes_\n",
    "class_labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.        , 0.        , 0.        , 0.        , 1.        ],\n",
       "       [0.        , 0.        , 0.        , 0.1       , 0.9       ],\n",
       "       [0.15      , 0.        , 0.        , 0.        , 0.85      ],\n",
       "       ...,\n",
       "       [0.1       , 0.        , 0.        , 0.2       , 0.7       ],\n",
       "       [0.        , 0.        , 0.        , 0.36430736, 0.63569264],\n",
       "       [0.        , 0.        , 0.        , 0.        , 1.        ]])"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_probs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "rf_df = pd.DataFrame(rf_probs, columns=[f'RF_Prob_{label}' for label in class_labels])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_Prob_0</th>\n",
       "      <th>RF_Prob_1</th>\n",
       "      <th>RF_Prob_2</th>\n",
       "      <th>RF_Prob_3</th>\n",
       "      <th>RF_Prob_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.150</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.850000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.350</td>\n",
       "      <td>0.475</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.175000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>0.425</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.575000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.364307</td>\n",
       "      <td>0.635693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      RF_Prob_0  RF_Prob_1  RF_Prob_2  RF_Prob_3  RF_Prob_4\n",
       "0         0.000      0.000        0.0   0.000000   1.000000\n",
       "1         0.000      0.000        0.0   0.100000   0.900000\n",
       "2         0.150      0.000        0.0   0.000000   0.850000\n",
       "3         0.350      0.475        0.0   0.000000   0.175000\n",
       "4         0.100      0.000        0.0   0.000000   0.900000\n",
       "...         ...        ...        ...        ...        ...\n",
       "3454      0.000      0.000        0.0   0.100000   0.900000\n",
       "3455      0.425      0.000        0.0   0.000000   0.575000\n",
       "3456      0.100      0.000        0.0   0.200000   0.700000\n",
       "3457      0.000      0.000        0.0   0.364307   0.635693\n",
       "3458      0.000      0.000        0.0   0.000000   1.000000\n",
       "\n",
       "[3459 rows x 5 columns]"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [],
   "source": [
    "RF=pd.concat([rf_df,rf_pred_df],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RF_Prob_0</th>\n",
       "      <th>RF_Prob_1</th>\n",
       "      <th>RF_Prob_2</th>\n",
       "      <th>RF_Prob_3</th>\n",
       "      <th>RF_Prob_4</th>\n",
       "      <th>RF_Pred_Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.150</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.850000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.350</td>\n",
       "      <td>0.475</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.175000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>0.425</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.575000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.700000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.364307</td>\n",
       "      <td>0.635693</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      RF_Prob_0  RF_Prob_1  RF_Prob_2  RF_Prob_3  RF_Prob_4  RF_Pred_Class\n",
       "0         0.000      0.000        0.0   0.000000   1.000000              4\n",
       "1         0.000      0.000        0.0   0.100000   0.900000              4\n",
       "2         0.150      0.000        0.0   0.000000   0.850000              4\n",
       "3         0.350      0.475        0.0   0.000000   0.175000              1\n",
       "4         0.100      0.000        0.0   0.000000   0.900000              4\n",
       "...         ...        ...        ...        ...        ...            ...\n",
       "3454      0.000      0.000        0.0   0.100000   0.900000              4\n",
       "3455      0.425      0.000        0.0   0.000000   0.575000              4\n",
       "3456      0.100      0.000        0.0   0.200000   0.700000              4\n",
       "3457      0.000      0.000        0.0   0.364307   0.635693              4\n",
       "3458      0.000      0.000        0.0   0.000000   1.000000              4\n",
       "\n",
       "[3459 rows x 6 columns]"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import (\n",
    "    accuracy_score,\n",
    "    precision_score,\n",
    "    recall_score,\n",
    "    f1_score,\n",
    "    confusion_matrix,\n",
    "    ConfusionMatrixDisplay\n",
    ")\n",
    "import matplotlib.pyplot as plt\n",
    "# Random Forest Confusion Matrix\n",
    "cm_rf = confusion_matrix(y_test, y_pred_rf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_confusion_matrix(cm, title):\n",
    "    disp = ConfusionMatrixDisplay(cm, display_labels=label_encoder.classes_)\n",
    "    disp.plot()\n",
    "    plt.title(title)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(cm_rf, 'Random Forest Confusion Matrix')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model: Random Forest\n",
      "Accuracy: 0.6528\n",
      "Precision: 0.6273\n",
      "Recall: 0.6528\n",
      "F1-score: 0.6317\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['Random Forest',\n",
       " 0.6527898236484533,\n",
       " np.float64(0.6272587212571935),\n",
       " np.float64(0.6527898236484533),\n",
       " np.float64(0.6316651872355962)]"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Evaluate Random Forest\n",
    "\n",
    "def evaluate_model(y_true, y_pred, model_name):\n",
    "    accuracy = accuracy_score(y_true, y_pred)\n",
    "    precision = precision_score(y_true, y_pred, average='weighted')\n",
    "    recall = recall_score(y_true, y_pred, average='weighted')\n",
    "    f1 = f1_score(y_true, y_pred, average='weighted')\n",
    "    print(f\"\\nModel: {model_name}\")\n",
    "    print(f\"Accuracy: {accuracy:.4f}\")\n",
    "    print(f\"Precision: {precision:.4f}\")\n",
    "    print(f\"Recall: {recall:.4f}\")\n",
    "    print(f\"F1-score: {f1:.4f}\")\n",
    "    return [model_name, accuracy, precision, recall, f1]\n",
    "\n",
    "evaluate_model(y_test, y_pred_rf, 'Random Forest')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "restaurants in testset: 3459\n",
      "\n",
      "restaurants with Award accuratelly predicted with Random Forest:2258\n",
      "\n",
      "Accurately Predicted Values (Random Forest):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "      <th>RF Prediction</th>\n",
       "      <th>LR Prediction</th>\n",
       "      <th>NB Prediction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Grand Cru</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hammer &amp; Pincers</td>\n",
       "      <td>Wymeswold, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kitchen Table</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2 Stars</td>\n",
       "      <td>2 Stars</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>3 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Roe</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Le Servan</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>3 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3451</th>\n",
       "      <td>Osteria Matto</td>\n",
       "      <td>Lyon, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3452</th>\n",
       "      <td>Dorset</td>\n",
       "      <td>Borne, Netherlands</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3453</th>\n",
       "      <td>Kika</td>\n",
       "      <td>Macau</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>Bootshaus</td>\n",
       "      <td>Weissenhaus, Germany</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>Liza</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2258 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Restaurant Name                   Location            True Award  \\\n",
       "0            Grand Cru     Prague, Czech Republic  Selected Restaurants   \n",
       "2     Hammer & Pincers  Wymeswold, United Kingdom  Selected Restaurants   \n",
       "3        Kitchen Table     London, United Kingdom               2 Stars   \n",
       "4                  Roe     London, United Kingdom  Selected Restaurants   \n",
       "6            Le Servan              Paris, France  Selected Restaurants   \n",
       "...                ...                        ...                   ...   \n",
       "3451     Osteria Matto               Lyon, France  Selected Restaurants   \n",
       "3452            Dorset         Borne, Netherlands  Selected Restaurants   \n",
       "3453              Kika                      Macau  Selected Restaurants   \n",
       "3454         Bootshaus       Weissenhaus, Germany  Selected Restaurants   \n",
       "3456              Liza              Paris, France  Selected Restaurants   \n",
       "\n",
       "             RF Prediction         LR Prediction NB Prediction  \n",
       "0     Selected Restaurants  Selected Restaurants  Bib Gourmand  \n",
       "2     Selected Restaurants  Selected Restaurants       2 Stars  \n",
       "3                  2 Stars                1 Star       3 Stars  \n",
       "4     Selected Restaurants  Selected Restaurants       2 Stars  \n",
       "6     Selected Restaurants  Selected Restaurants       3 Stars  \n",
       "...                    ...                   ...           ...  \n",
       "3451  Selected Restaurants  Selected Restaurants       2 Stars  \n",
       "3452  Selected Restaurants  Selected Restaurants  Bib Gourmand  \n",
       "3453  Selected Restaurants  Selected Restaurants        1 Star  \n",
       "3454  Selected Restaurants  Selected Restaurants       2 Stars  \n",
       "3456  Selected Restaurants  Selected Restaurants  Bib Gourmand  \n",
       "\n",
       "[2258 rows x 6 columns]"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 7: Create a table for accurately predicted values\n",
    "accurate_predictions_rf = pred_comparison[pred_comparison['True Award'] == pred_comparison['RF Prediction']]\n",
    "\n",
    "# Print accurately predicted values\n",
    "total_TEST = len(X_test)\n",
    "print(f\"\\nrestaurants in testset: {total_TEST}\")\n",
    "print(f\"\\nrestaurants with Award accuratelly predicted with Random Forest:{len(accurate_predictions_rf)}\")\n",
    "print(\"\\nAccurately Predicted Values (Random Forest):\")\n",
    "accurate_predictions_rf"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py:1256: FutureWarning: 'multi_class' was deprecated in version 1.5 and will be removed in 1.7. Use OneVsRestClassifier(LogisticRegression(..)) instead. Leave it to its default value to avoid this warning.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "# Logistic Regression\n",
    "lr_model = LogisticRegression(multi_class='ovr', solver='liblinear')\n",
    "lr_model.fit(X_train, y_train)\n",
    "y_pred_lr = lr_model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [],
   "source": [
    "lr_probs = lr_model.predict_proba(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LR_Pred_Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      LR_Pred_Class\n",
       "0                 4\n",
       "1                 4\n",
       "2                 4\n",
       "3                 0\n",
       "4                 4\n",
       "...             ...\n",
       "3454              4\n",
       "3455              4\n",
       "3456              4\n",
       "3457              3\n",
       "3458              4\n",
       "\n",
       "[3459 rows x 1 columns]"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr_pred_df = pd.DataFrame(y_pred_lr, columns=[f'LR_Pred_Class'])\n",
    "lr_pred_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LR_Prob_0</th>\n",
       "      <th>LR_Prob_1</th>\n",
       "      <th>LR_Prob_2</th>\n",
       "      <th>LR_Prob_3</th>\n",
       "      <th>LR_Prob_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.023597</td>\n",
       "      <td>0.001773</td>\n",
       "      <td>0.001001</td>\n",
       "      <td>0.079907</td>\n",
       "      <td>0.893722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.220670</td>\n",
       "      <td>0.012429</td>\n",
       "      <td>0.004863</td>\n",
       "      <td>0.029314</td>\n",
       "      <td>0.732725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.132379</td>\n",
       "      <td>0.002930</td>\n",
       "      <td>0.001281</td>\n",
       "      <td>0.020466</td>\n",
       "      <td>0.842945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.516550</td>\n",
       "      <td>0.056718</td>\n",
       "      <td>0.003098</td>\n",
       "      <td>0.001856</td>\n",
       "      <td>0.421779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.032843</td>\n",
       "      <td>0.001648</td>\n",
       "      <td>0.001262</td>\n",
       "      <td>0.183056</td>\n",
       "      <td>0.781192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>0.006212</td>\n",
       "      <td>0.000897</td>\n",
       "      <td>0.000260</td>\n",
       "      <td>0.230495</td>\n",
       "      <td>0.762136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>0.201281</td>\n",
       "      <td>0.025868</td>\n",
       "      <td>0.012997</td>\n",
       "      <td>0.250101</td>\n",
       "      <td>0.509754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>0.010440</td>\n",
       "      <td>0.000877</td>\n",
       "      <td>0.003572</td>\n",
       "      <td>0.161274</td>\n",
       "      <td>0.823838</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>0.001526</td>\n",
       "      <td>0.000030</td>\n",
       "      <td>0.000057</td>\n",
       "      <td>0.740738</td>\n",
       "      <td>0.257648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>0.013298</td>\n",
       "      <td>0.000686</td>\n",
       "      <td>0.000302</td>\n",
       "      <td>0.230459</td>\n",
       "      <td>0.755255</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      LR_Prob_0  LR_Prob_1  LR_Prob_2  LR_Prob_3  LR_Prob_4\n",
       "0      0.023597   0.001773   0.001001   0.079907   0.893722\n",
       "1      0.220670   0.012429   0.004863   0.029314   0.732725\n",
       "2      0.132379   0.002930   0.001281   0.020466   0.842945\n",
       "3      0.516550   0.056718   0.003098   0.001856   0.421779\n",
       "4      0.032843   0.001648   0.001262   0.183056   0.781192\n",
       "...         ...        ...        ...        ...        ...\n",
       "3454   0.006212   0.000897   0.000260   0.230495   0.762136\n",
       "3455   0.201281   0.025868   0.012997   0.250101   0.509754\n",
       "3456   0.010440   0.000877   0.003572   0.161274   0.823838\n",
       "3457   0.001526   0.000030   0.000057   0.740738   0.257648\n",
       "3458   0.013298   0.000686   0.000302   0.230459   0.755255\n",
       "\n",
       "[3459 rows x 5 columns]"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr_df = pd.DataFrame(lr_probs, columns=[f'LR_Prob_{label}' for label in class_labels])\n",
    "lr_df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LR_Prob_0</th>\n",
       "      <th>LR_Prob_1</th>\n",
       "      <th>LR_Prob_2</th>\n",
       "      <th>LR_Prob_3</th>\n",
       "      <th>LR_Prob_4</th>\n",
       "      <th>LR_Pred_Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.023597</td>\n",
       "      <td>0.001773</td>\n",
       "      <td>0.001001</td>\n",
       "      <td>0.079907</td>\n",
       "      <td>0.893722</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.220670</td>\n",
       "      <td>0.012429</td>\n",
       "      <td>0.004863</td>\n",
       "      <td>0.029314</td>\n",
       "      <td>0.732725</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.132379</td>\n",
       "      <td>0.002930</td>\n",
       "      <td>0.001281</td>\n",
       "      <td>0.020466</td>\n",
       "      <td>0.842945</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.516550</td>\n",
       "      <td>0.056718</td>\n",
       "      <td>0.003098</td>\n",
       "      <td>0.001856</td>\n",
       "      <td>0.421779</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.032843</td>\n",
       "      <td>0.001648</td>\n",
       "      <td>0.001262</td>\n",
       "      <td>0.183056</td>\n",
       "      <td>0.781192</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>0.006212</td>\n",
       "      <td>0.000897</td>\n",
       "      <td>0.000260</td>\n",
       "      <td>0.230495</td>\n",
       "      <td>0.762136</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>0.201281</td>\n",
       "      <td>0.025868</td>\n",
       "      <td>0.012997</td>\n",
       "      <td>0.250101</td>\n",
       "      <td>0.509754</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>0.010440</td>\n",
       "      <td>0.000877</td>\n",
       "      <td>0.003572</td>\n",
       "      <td>0.161274</td>\n",
       "      <td>0.823838</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>0.001526</td>\n",
       "      <td>0.000030</td>\n",
       "      <td>0.000057</td>\n",
       "      <td>0.740738</td>\n",
       "      <td>0.257648</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>0.013298</td>\n",
       "      <td>0.000686</td>\n",
       "      <td>0.000302</td>\n",
       "      <td>0.230459</td>\n",
       "      <td>0.755255</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      LR_Prob_0  LR_Prob_1  LR_Prob_2  LR_Prob_3  LR_Prob_4  LR_Pred_Class\n",
       "0      0.023597   0.001773   0.001001   0.079907   0.893722              4\n",
       "1      0.220670   0.012429   0.004863   0.029314   0.732725              4\n",
       "2      0.132379   0.002930   0.001281   0.020466   0.842945              4\n",
       "3      0.516550   0.056718   0.003098   0.001856   0.421779              0\n",
       "4      0.032843   0.001648   0.001262   0.183056   0.781192              4\n",
       "...         ...        ...        ...        ...        ...            ...\n",
       "3454   0.006212   0.000897   0.000260   0.230495   0.762136              4\n",
       "3455   0.201281   0.025868   0.012997   0.250101   0.509754              4\n",
       "3456   0.010440   0.000877   0.003572   0.161274   0.823838              4\n",
       "3457   0.001526   0.000030   0.000057   0.740738   0.257648              3\n",
       "3458   0.013298   0.000686   0.000302   0.230459   0.755255              4\n",
       "\n",
       "[3459 rows x 6 columns]"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LR=pd.concat([lr_df,lr_pred_df],axis=1)\n",
    "LR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "      <th>RF_Prob_0</th>\n",
       "      <th>RF_Prob_1</th>\n",
       "      <th>RF_Prob_2</th>\n",
       "      <th>RF_Prob_3</th>\n",
       "      <th>RF_Prob_4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Grand Cru</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Wirtshaus Meyers Keller</td>\n",
       "      <td>Nördlingen, Germany</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hammer &amp; Pincers</td>\n",
       "      <td>Wymeswold, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.850000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kitchen Table</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2 Stars</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.475</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.175000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Roe</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>Bootshaus</td>\n",
       "      <td>Weissenhaus, Germany</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>Summer Pavilion</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.575000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>Liza</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>Bún Bò Bà Rơi (Hai Chau)</td>\n",
       "      <td>Da Nang, Vietnam</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.364307</td>\n",
       "      <td>0.635693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>Das Fetzwerk</td>\n",
       "      <td>Oberstdorf, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Restaurant Name                   Location  \\\n",
       "0                    Grand Cru     Prague, Czech Republic   \n",
       "1      Wirtshaus Meyers Keller        Nördlingen, Germany   \n",
       "2             Hammer & Pincers  Wymeswold, United Kingdom   \n",
       "3                Kitchen Table     London, United Kingdom   \n",
       "4                          Roe     London, United Kingdom   \n",
       "...                        ...                        ...   \n",
       "3454                 Bootshaus       Weissenhaus, Germany   \n",
       "3455           Summer Pavilion                  Singapore   \n",
       "3456                      Liza              Paris, France   \n",
       "3457  Bún Bò Bà Rơi (Hai Chau)           Da Nang, Vietnam   \n",
       "3458              Das Fetzwerk        Oberstdorf, Germany   \n",
       "\n",
       "                True Award  RF_Prob_0  RF_Prob_1  RF_Prob_2  RF_Prob_3  \\\n",
       "0     Selected Restaurants      0.000      0.000        0.0   0.000000   \n",
       "1                   1 Star      0.000      0.000        0.0   0.100000   \n",
       "2     Selected Restaurants      0.150      0.000        0.0   0.000000   \n",
       "3                  2 Stars      0.350      0.475        0.0   0.000000   \n",
       "4     Selected Restaurants      0.100      0.000        0.0   0.000000   \n",
       "...                    ...        ...        ...        ...        ...   \n",
       "3454  Selected Restaurants      0.000      0.000        0.0   0.100000   \n",
       "3455                1 Star      0.425      0.000        0.0   0.000000   \n",
       "3456  Selected Restaurants      0.100      0.000        0.0   0.200000   \n",
       "3457          Bib Gourmand      0.000      0.000        0.0   0.364307   \n",
       "3458          Bib Gourmand      0.000      0.000        0.0   0.000000   \n",
       "\n",
       "      RF_Prob_4  \n",
       "0      1.000000  \n",
       "1      0.900000  \n",
       "2      0.850000  \n",
       "3      0.175000  \n",
       "4      0.900000  \n",
       "...         ...  \n",
       "3454   0.900000  \n",
       "3455   0.575000  \n",
       "3456   0.700000  \n",
       "3457   0.635693  \n",
       "3458   1.000000  \n",
       "\n",
       "[3459 rows x 8 columns]"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comparison_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm_lr = confusion_matrix(y_test, y_pred_lr)\n",
    "plot_confusion_matrix(cm_lr, 'Logistic Regression Confusion Matrix')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model: Logistic Regression\n",
      "Accuracy: 0.6661\n",
      "Precision: 0.6351\n",
      "Recall: 0.6661\n",
      "F1-score: 0.6267\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\sklearn\\metrics\\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['Logistic Regression',\n",
       " 0.6660884648742411,\n",
       " np.float64(0.6350958657776739),\n",
       " np.float64(0.6660884648742411),\n",
       " np.float64(0.6267173298093696)]"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "evaluate_model(y_test, y_pred_lr, 'Logistic Regression')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "restaurants in testset: 3459\n",
      "\n",
      "restaurants with Award accuratelly predicted with Logistic Regression:2304\n",
      "\n",
      "Accurately Predicted Values (Logistic Regression):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "      <th>RF Prediction</th>\n",
       "      <th>LR Prediction</th>\n",
       "      <th>NB Prediction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Grand Cru</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hammer &amp; Pincers</td>\n",
       "      <td>Wymeswold, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Roe</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Le Servan</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>3 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Candlelight</td>\n",
       "      <td>S'Agaró, Spain</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3452</th>\n",
       "      <td>Dorset</td>\n",
       "      <td>Borne, Netherlands</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3453</th>\n",
       "      <td>Kika</td>\n",
       "      <td>Macau</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>Bootshaus</td>\n",
       "      <td>Weissenhaus, Germany</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>Liza</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>Bún Bò Bà Rơi (Hai Chau)</td>\n",
       "      <td>Da Nang, Vietnam</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2304 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Restaurant Name                   Location  \\\n",
       "0                    Grand Cru     Prague, Czech Republic   \n",
       "2             Hammer & Pincers  Wymeswold, United Kingdom   \n",
       "4                          Roe     London, United Kingdom   \n",
       "6                    Le Servan              Paris, France   \n",
       "10                 Candlelight             S'Agaró, Spain   \n",
       "...                        ...                        ...   \n",
       "3452                    Dorset         Borne, Netherlands   \n",
       "3453                      Kika                      Macau   \n",
       "3454                 Bootshaus       Weissenhaus, Germany   \n",
       "3456                      Liza              Paris, France   \n",
       "3457  Bún Bò Bà Rơi (Hai Chau)           Da Nang, Vietnam   \n",
       "\n",
       "                True Award         RF Prediction         LR Prediction  \\\n",
       "0     Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "2     Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "4     Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "6     Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "10    Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "...                    ...                   ...                   ...   \n",
       "3452  Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3453  Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3454  Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3456  Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3457          Bib Gourmand  Selected Restaurants          Bib Gourmand   \n",
       "\n",
       "     NB Prediction  \n",
       "0     Bib Gourmand  \n",
       "2          2 Stars  \n",
       "4          2 Stars  \n",
       "6          3 Stars  \n",
       "10          1 Star  \n",
       "...            ...  \n",
       "3452  Bib Gourmand  \n",
       "3453        1 Star  \n",
       "3454       2 Stars  \n",
       "3456  Bib Gourmand  \n",
       "3457  Bib Gourmand  \n",
       "\n",
       "[2304 rows x 6 columns]"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accurate_predictions_lr = pred_comparison[pred_comparison['True Award'] == pred_comparison['LR Prediction']]\n",
    "\n",
    "# Print accurately predicted values\n",
    "total_TEST = len(X_test)\n",
    "print(f\"\\nrestaurants in testset: {total_TEST}\")\n",
    "print(f\"\\nrestaurants with Award accuratelly predicted with Logistic Regression:{len(accurate_predictions_lr)}\")\n",
    "print(\"\\nAccurately Predicted Values (Logistic Regression):\")\n",
    "accurate_predictions_lr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Naive Bayes Classifier "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.naive_bayes import GaussianNB \n",
    "# Gaussian Naive Bayes\n",
    "nb_model = GaussianNB()  # Initialize Naive Bayes model\n",
    "nb_model.fit(X_train, y_train)\n",
    "y_pred_nb = nb_model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NB_Pred_Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      NB_Pred_Class\n",
       "0                 3\n",
       "1                 3\n",
       "2                 1\n",
       "3                 2\n",
       "4                 1\n",
       "...             ...\n",
       "3454              1\n",
       "3455              2\n",
       "3456              3\n",
       "3457              3\n",
       "3458              3\n",
       "\n",
       "[3459 rows x 1 columns]"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nb_probs = nb_model.predict_proba(X_test)\n",
    "nb_pred_df = pd.DataFrame(y_pred_nb, columns=[f'NB_Pred_Class'])\n",
    "nb_pred_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NB_Prob_0</th>\n",
       "      <th>NB_Prob_1</th>\n",
       "      <th>NB_Prob_2</th>\n",
       "      <th>NB_Prob_3</th>\n",
       "      <th>NB_Prob_4</th>\n",
       "      <th>NB_Pred_Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.913715e-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         NB_Prob_0  NB_Prob_1  NB_Prob_2  NB_Prob_3  NB_Prob_4  NB_Pred_Class\n",
       "0     0.000000e+00        0.0        0.0        1.0        0.0              3\n",
       "1     2.913715e-23        0.0        0.0        1.0        0.0              3\n",
       "2     0.000000e+00        1.0        0.0        0.0        0.0              1\n",
       "3     0.000000e+00        0.0        1.0        0.0        0.0              2\n",
       "4     0.000000e+00        1.0        0.0        0.0        0.0              1\n",
       "...            ...        ...        ...        ...        ...            ...\n",
       "3454  0.000000e+00        1.0        0.0        0.0        0.0              1\n",
       "3455  0.000000e+00        0.0        1.0        0.0        0.0              2\n",
       "3456  0.000000e+00        0.0        0.0        1.0        0.0              3\n",
       "3457  0.000000e+00        0.0        0.0        1.0        0.0              3\n",
       "3458  0.000000e+00        0.0        0.0        1.0        0.0              3\n",
       "\n",
       "[3459 rows x 6 columns]"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nb_df = pd.DataFrame(nb_probs, columns=[f'NB_Prob_{label}' for label in class_labels])\n",
    "NB=pd.concat([nb_df,nb_pred_df],axis=1)\n",
    "NB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "nb_lr = confusion_matrix(y_test, y_pred_nb)\n",
    "plot_confusion_matrix(nb_lr, 'Naive Bayes Confusion Matrix')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model: Naive Bayes\n",
      "Accuracy: 0.2067\n",
      "Precision: 0.4990\n",
      "Recall: 0.2067\n",
      "F1-score: 0.2491\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['Naive Bayes',\n",
       " 0.20670714079213645,\n",
       " np.float64(0.4989975837797107),\n",
       " np.float64(0.20670714079213645),\n",
       " np.float64(0.24905984769331402)]"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "evaluate_model(y_test, y_pred_nb, 'Naive Bayes')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "restaurants in testset: 3459\n",
      "\n",
      "restaurants with Award accuratelly predicted with Naive Bayes:715\n",
      "\n",
      "Accurately Predicted Values (Naive Bayes):\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "      <th>RF Prediction</th>\n",
       "      <th>LR Prediction</th>\n",
       "      <th>NB Prediction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Taian</td>\n",
       "      <td>Osaka, Japan</td>\n",
       "      <td>3 Stars</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>3 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Landgasthof Schwanen</td>\n",
       "      <td>Bad Bellingen, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Breizh Café Cancale</td>\n",
       "      <td>Cancale, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Lake Road Kitchen</td>\n",
       "      <td>Ambleside, United Kingdom</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Baan Ta Ko Rai</td>\n",
       "      <td>Phra Nakhon Si Ayutthaya, Thailand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3441</th>\n",
       "      <td>Anetseder</td>\n",
       "      <td>Hauzenberg, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3444</th>\n",
       "      <td>Culinair</td>\n",
       "      <td>Lauwe, Belgium</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3448</th>\n",
       "      <td>Mor Mu Dong</td>\n",
       "      <td>Phuket, Thailand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>Bún Bò Bà Rơi (Hai Chau)</td>\n",
       "      <td>Da Nang, Vietnam</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>Das Fetzwerk</td>\n",
       "      <td>Oberstdorf, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>715 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Restaurant Name                            Location  \\\n",
       "16                       Taian                        Osaka, Japan   \n",
       "20        Landgasthof Schwanen              Bad Bellingen, Germany   \n",
       "22         Breizh Café Cancale                     Cancale, France   \n",
       "24           Lake Road Kitchen           Ambleside, United Kingdom   \n",
       "27              Baan Ta Ko Rai  Phra Nakhon Si Ayutthaya, Thailand   \n",
       "...                        ...                                 ...   \n",
       "3441                 Anetseder                 Hauzenberg, Germany   \n",
       "3444                  Culinair                      Lauwe, Belgium   \n",
       "3448               Mor Mu Dong                    Phuket, Thailand   \n",
       "3457  Bún Bò Bà Rơi (Hai Chau)                    Da Nang, Vietnam   \n",
       "3458              Das Fetzwerk                 Oberstdorf, Germany   \n",
       "\n",
       "                True Award         RF Prediction         LR Prediction  \\\n",
       "16                 3 Stars                1 Star                1 Star   \n",
       "20            Bib Gourmand  Selected Restaurants  Selected Restaurants   \n",
       "22    Selected Restaurants          Bib Gourmand  Selected Restaurants   \n",
       "24                  1 Star                1 Star                1 Star   \n",
       "27            Bib Gourmand  Selected Restaurants  Selected Restaurants   \n",
       "...                    ...                   ...                   ...   \n",
       "3441          Bib Gourmand          Bib Gourmand          Bib Gourmand   \n",
       "3444  Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3448          Bib Gourmand  Selected Restaurants          Bib Gourmand   \n",
       "3457          Bib Gourmand  Selected Restaurants          Bib Gourmand   \n",
       "3458          Bib Gourmand  Selected Restaurants  Selected Restaurants   \n",
       "\n",
       "             NB Prediction  \n",
       "16                 3 Stars  \n",
       "20            Bib Gourmand  \n",
       "22    Selected Restaurants  \n",
       "24                  1 Star  \n",
       "27            Bib Gourmand  \n",
       "...                    ...  \n",
       "3441          Bib Gourmand  \n",
       "3444  Selected Restaurants  \n",
       "3448          Bib Gourmand  \n",
       "3457          Bib Gourmand  \n",
       "3458          Bib Gourmand  \n",
       "\n",
       "[715 rows x 6 columns]"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accurate_predictions_nb = pred_comparison[pred_comparison['True Award'] == pred_comparison['NB Prediction']]\n",
    "\n",
    "# Print accurately predicted values\n",
    "total_TEST = len(X_test)\n",
    "print(f\"\\nrestaurants in testset: {total_TEST}\")\n",
    "print(f\"\\nrestaurants with Award accuratelly predicted with Naive Bayes:{len(accurate_predictions_nb)}\")\n",
    "print(\"\\nAccurately Predicted Values (Naive Bayes):\")\n",
    "accurate_predictions_nb"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Add the original Name, Location, and True Award for easy comparison\n",
    "test_restaurants = pd.DataFrame({\n",
    "    'Restaurant Name': df_with_dummies.loc[test_indices, 'Name'].values,  # Get names using test_indices\n",
    "    'Location': df_with_dummies.loc[test_indices, 'Location'].values,      # Get locations using test_indices\n",
    "    'True Award': label_encoder.inverse_transform(y_test),\n",
    "    \n",
    "})\n",
    "\n",
    "# Combine everything into a single DataFrame\n",
    "comparison_df = pd.concat([test_restaurants, RF, LR, NB], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "      <th>RF_Prob_0</th>\n",
       "      <th>RF_Prob_1</th>\n",
       "      <th>RF_Prob_2</th>\n",
       "      <th>RF_Prob_3</th>\n",
       "      <th>RF_Prob_4</th>\n",
       "      <th>RF_Pred_Class</th>\n",
       "      <th>LR_Prob_0</th>\n",
       "      <th>...</th>\n",
       "      <th>LR_Prob_2</th>\n",
       "      <th>LR_Prob_3</th>\n",
       "      <th>LR_Prob_4</th>\n",
       "      <th>LR_Pred_Class</th>\n",
       "      <th>NB_Prob_0</th>\n",
       "      <th>NB_Prob_1</th>\n",
       "      <th>NB_Prob_2</th>\n",
       "      <th>NB_Prob_3</th>\n",
       "      <th>NB_Prob_4</th>\n",
       "      <th>NB_Pred_Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Grand Cru</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.023597</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001001</td>\n",
       "      <td>0.079907</td>\n",
       "      <td>0.893722</td>\n",
       "      <td>4</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Wirtshaus Meyers Keller</td>\n",
       "      <td>Nördlingen, Germany</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.220670</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004863</td>\n",
       "      <td>0.029314</td>\n",
       "      <td>0.732725</td>\n",
       "      <td>4</td>\n",
       "      <td>2.913715e-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hammer &amp; Pincers</td>\n",
       "      <td>Wymeswold, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.150</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.850000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.132379</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001281</td>\n",
       "      <td>0.020466</td>\n",
       "      <td>0.842945</td>\n",
       "      <td>4</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kitchen Table</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2 Stars</td>\n",
       "      <td>0.350</td>\n",
       "      <td>0.475</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.175000</td>\n",
       "      <td>1</td>\n",
       "      <td>0.516550</td>\n",
       "      <td>...</td>\n",
       "      <td>0.003098</td>\n",
       "      <td>0.001856</td>\n",
       "      <td>0.421779</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Roe</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.032843</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001262</td>\n",
       "      <td>0.183056</td>\n",
       "      <td>0.781192</td>\n",
       "      <td>4</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>Bootshaus</td>\n",
       "      <td>Weissenhaus, Germany</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.900000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.006212</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000260</td>\n",
       "      <td>0.230495</td>\n",
       "      <td>0.762136</td>\n",
       "      <td>4</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>Summer Pavilion</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>0.425</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.575000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.201281</td>\n",
       "      <td>...</td>\n",
       "      <td>0.012997</td>\n",
       "      <td>0.250101</td>\n",
       "      <td>0.509754</td>\n",
       "      <td>4</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>Liza</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>0.100</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.700000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.010440</td>\n",
       "      <td>...</td>\n",
       "      <td>0.003572</td>\n",
       "      <td>0.161274</td>\n",
       "      <td>0.823838</td>\n",
       "      <td>4</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>Bún Bò Bà Rơi (Hai Chau)</td>\n",
       "      <td>Da Nang, Vietnam</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.364307</td>\n",
       "      <td>0.635693</td>\n",
       "      <td>4</td>\n",
       "      <td>0.001526</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000057</td>\n",
       "      <td>0.740738</td>\n",
       "      <td>0.257648</td>\n",
       "      <td>3</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>Das Fetzwerk</td>\n",
       "      <td>Oberstdorf, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.013298</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000302</td>\n",
       "      <td>0.230459</td>\n",
       "      <td>0.755255</td>\n",
       "      <td>4</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Restaurant Name                   Location  \\\n",
       "0                    Grand Cru     Prague, Czech Republic   \n",
       "1      Wirtshaus Meyers Keller        Nördlingen, Germany   \n",
       "2             Hammer & Pincers  Wymeswold, United Kingdom   \n",
       "3                Kitchen Table     London, United Kingdom   \n",
       "4                          Roe     London, United Kingdom   \n",
       "...                        ...                        ...   \n",
       "3454                 Bootshaus       Weissenhaus, Germany   \n",
       "3455           Summer Pavilion                  Singapore   \n",
       "3456                      Liza              Paris, France   \n",
       "3457  Bún Bò Bà Rơi (Hai Chau)           Da Nang, Vietnam   \n",
       "3458              Das Fetzwerk        Oberstdorf, Germany   \n",
       "\n",
       "                True Award  RF_Prob_0  RF_Prob_1  RF_Prob_2  RF_Prob_3  \\\n",
       "0     Selected Restaurants      0.000      0.000        0.0   0.000000   \n",
       "1                   1 Star      0.000      0.000        0.0   0.100000   \n",
       "2     Selected Restaurants      0.150      0.000        0.0   0.000000   \n",
       "3                  2 Stars      0.350      0.475        0.0   0.000000   \n",
       "4     Selected Restaurants      0.100      0.000        0.0   0.000000   \n",
       "...                    ...        ...        ...        ...        ...   \n",
       "3454  Selected Restaurants      0.000      0.000        0.0   0.100000   \n",
       "3455                1 Star      0.425      0.000        0.0   0.000000   \n",
       "3456  Selected Restaurants      0.100      0.000        0.0   0.200000   \n",
       "3457          Bib Gourmand      0.000      0.000        0.0   0.364307   \n",
       "3458          Bib Gourmand      0.000      0.000        0.0   0.000000   \n",
       "\n",
       "      RF_Prob_4  RF_Pred_Class  LR_Prob_0  ...  LR_Prob_2  LR_Prob_3  \\\n",
       "0      1.000000              4   0.023597  ...   0.001001   0.079907   \n",
       "1      0.900000              4   0.220670  ...   0.004863   0.029314   \n",
       "2      0.850000              4   0.132379  ...   0.001281   0.020466   \n",
       "3      0.175000              1   0.516550  ...   0.003098   0.001856   \n",
       "4      0.900000              4   0.032843  ...   0.001262   0.183056   \n",
       "...         ...            ...        ...  ...        ...        ...   \n",
       "3454   0.900000              4   0.006212  ...   0.000260   0.230495   \n",
       "3455   0.575000              4   0.201281  ...   0.012997   0.250101   \n",
       "3456   0.700000              4   0.010440  ...   0.003572   0.161274   \n",
       "3457   0.635693              4   0.001526  ...   0.000057   0.740738   \n",
       "3458   1.000000              4   0.013298  ...   0.000302   0.230459   \n",
       "\n",
       "      LR_Prob_4  LR_Pred_Class     NB_Prob_0  NB_Prob_1  NB_Prob_2  NB_Prob_3  \\\n",
       "0      0.893722              4  0.000000e+00        0.0        0.0        1.0   \n",
       "1      0.732725              4  2.913715e-23        0.0        0.0        1.0   \n",
       "2      0.842945              4  0.000000e+00        1.0        0.0        0.0   \n",
       "3      0.421779              0  0.000000e+00        0.0        1.0        0.0   \n",
       "4      0.781192              4  0.000000e+00        1.0        0.0        0.0   \n",
       "...         ...            ...           ...        ...        ...        ...   \n",
       "3454   0.762136              4  0.000000e+00        1.0        0.0        0.0   \n",
       "3455   0.509754              4  0.000000e+00        0.0        1.0        0.0   \n",
       "3456   0.823838              4  0.000000e+00        0.0        0.0        1.0   \n",
       "3457   0.257648              3  0.000000e+00        0.0        0.0        1.0   \n",
       "3458   0.755255              4  0.000000e+00        0.0        0.0        1.0   \n",
       "\n",
       "      NB_Prob_4  NB_Pred_Class  \n",
       "0           0.0              3  \n",
       "1           0.0              3  \n",
       "2           0.0              1  \n",
       "3           0.0              2  \n",
       "4           0.0              1  \n",
       "...         ...            ...  \n",
       "3454        0.0              1  \n",
       "3455        0.0              2  \n",
       "3456        0.0              3  \n",
       "3457        0.0              3  \n",
       "3458        0.0              3  \n",
       "\n",
       "[3459 rows x 21 columns]"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "comparison_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Prediction Comparison Table:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "      <th>RF Prediction</th>\n",
       "      <th>LR Prediction</th>\n",
       "      <th>NB Prediction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Grand Cru</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Wirtshaus Meyers Keller</td>\n",
       "      <td>Nördlingen, Germany</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hammer &amp; Pincers</td>\n",
       "      <td>Wymeswold, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kitchen Table</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2 Stars</td>\n",
       "      <td>2 Stars</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>3 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Roe</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>Bootshaus</td>\n",
       "      <td>Weissenhaus, Germany</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>Summer Pavilion</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>3 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>Liza</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>Bún Bò Bà Rơi (Hai Chau)</td>\n",
       "      <td>Da Nang, Vietnam</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>Das Fetzwerk</td>\n",
       "      <td>Oberstdorf, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Restaurant Name                   Location  \\\n",
       "0                    Grand Cru     Prague, Czech Republic   \n",
       "1      Wirtshaus Meyers Keller        Nördlingen, Germany   \n",
       "2             Hammer & Pincers  Wymeswold, United Kingdom   \n",
       "3                Kitchen Table     London, United Kingdom   \n",
       "4                          Roe     London, United Kingdom   \n",
       "...                        ...                        ...   \n",
       "3454                 Bootshaus       Weissenhaus, Germany   \n",
       "3455           Summer Pavilion                  Singapore   \n",
       "3456                      Liza              Paris, France   \n",
       "3457  Bún Bò Bà Rơi (Hai Chau)           Da Nang, Vietnam   \n",
       "3458              Das Fetzwerk        Oberstdorf, Germany   \n",
       "\n",
       "                True Award         RF Prediction         LR Prediction  \\\n",
       "0     Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "1                   1 Star  Selected Restaurants  Selected Restaurants   \n",
       "2     Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3                  2 Stars               2 Stars                1 Star   \n",
       "4     Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "...                    ...                   ...                   ...   \n",
       "3454  Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3455                1 Star  Selected Restaurants  Selected Restaurants   \n",
       "3456  Selected Restaurants  Selected Restaurants  Selected Restaurants   \n",
       "3457          Bib Gourmand  Selected Restaurants          Bib Gourmand   \n",
       "3458          Bib Gourmand  Selected Restaurants  Selected Restaurants   \n",
       "\n",
       "     NB Prediction  \n",
       "0     Bib Gourmand  \n",
       "1     Bib Gourmand  \n",
       "2          2 Stars  \n",
       "3          3 Stars  \n",
       "4          2 Stars  \n",
       "...            ...  \n",
       "3454       2 Stars  \n",
       "3455       3 Stars  \n",
       "3456  Bib Gourmand  \n",
       "3457  Bib Gourmand  \n",
       "3458  Bib Gourmand  \n",
       "\n",
       "[3459 rows x 6 columns]"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 6: Create a table comparing predictions from all models\n",
    "pred_comparison = pd.DataFrame({\n",
    "    'Restaurant Name': data.loc[test_indices, 'Name'].values,  # Get names using test_indices\n",
    "    'Location': data.loc[test_indices, 'Location'].values,      # Get locations using test_indices\n",
    "    'True Award': label_encoder.inverse_transform(y_test),\n",
    "    'RF Prediction': label_encoder.inverse_transform(y_pred_rf),\n",
    "    'LR Prediction': label_encoder.inverse_transform(y_pred_lr),\n",
    "    'NB Prediction': label_encoder.inverse_transform(y_pred_nb)  # Include Naive Bayes predictions\n",
    "})\n",
    "\n",
    "print(\"\\nPrediction Comparison Table:\")\n",
    "pred_comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Grand Cru</td>\n",
       "      <td>Prague, Czech Republic</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Wirtshaus Meyers Keller</td>\n",
       "      <td>Nördlingen, Germany</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hammer &amp; Pincers</td>\n",
       "      <td>Wymeswold, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kitchen Table</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2 Stars</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Roe</td>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3454</th>\n",
       "      <td>Bootshaus</td>\n",
       "      <td>Weissenhaus, Germany</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3455</th>\n",
       "      <td>Summer Pavilion</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>Liza</td>\n",
       "      <td>Paris, France</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3457</th>\n",
       "      <td>Bún Bò Bà Rơi (Hai Chau)</td>\n",
       "      <td>Da Nang, Vietnam</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3458</th>\n",
       "      <td>Das Fetzwerk</td>\n",
       "      <td>Oberstdorf, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3459 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Restaurant Name                   Location  \\\n",
       "0                    Grand Cru     Prague, Czech Republic   \n",
       "1      Wirtshaus Meyers Keller        Nördlingen, Germany   \n",
       "2             Hammer & Pincers  Wymeswold, United Kingdom   \n",
       "3                Kitchen Table     London, United Kingdom   \n",
       "4                          Roe     London, United Kingdom   \n",
       "...                        ...                        ...   \n",
       "3454                 Bootshaus       Weissenhaus, Germany   \n",
       "3455           Summer Pavilion                  Singapore   \n",
       "3456                      Liza              Paris, France   \n",
       "3457  Bún Bò Bà Rơi (Hai Chau)           Da Nang, Vietnam   \n",
       "3458              Das Fetzwerk        Oberstdorf, Germany   \n",
       "\n",
       "                True Award  \n",
       "0     Selected Restaurants  \n",
       "1                   1 Star  \n",
       "2     Selected Restaurants  \n",
       "3                  2 Stars  \n",
       "4     Selected Restaurants  \n",
       "...                    ...  \n",
       "3454  Selected Restaurants  \n",
       "3455                1 Star  \n",
       "3456  Selected Restaurants  \n",
       "3457          Bib Gourmand  \n",
       "3458          Bib Gourmand  \n",
       "\n",
       "[3459 rows x 3 columns]"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_restaurants"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "restaurants in testset: 3459\n",
      "\n",
      "restaurants with Award accuratelly predicted with all 3 methods:408\n",
      "\n",
      "Accurately Predicted Values with all 3 methods:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>True Award</th>\n",
       "      <th>RF Prediction</th>\n",
       "      <th>LR Prediction</th>\n",
       "      <th>NB Prediction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Lake Road Kitchen</td>\n",
       "      <td>Ambleside, United Kingdom</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>ROM</td>\n",
       "      <td>Roses, Spain</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>Hudson Smokehouse</td>\n",
       "      <td>Bronx, USA</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Brasserie du Château</td>\n",
       "      <td>Bottmingen, Switzerland</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>Cristó</td>\n",
       "      <td>Zierikzee, Netherlands</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3408</th>\n",
       "      <td>Forde</td>\n",
       "      <td>Horsforth, United Kingdom</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3427</th>\n",
       "      <td>Nils</td>\n",
       "      <td>Koksijde, Belgium</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3430</th>\n",
       "      <td>Vecchia Malcesine</td>\n",
       "      <td>Malcesine, Italy</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "      <td>1 Star</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3441</th>\n",
       "      <td>Anetseder</td>\n",
       "      <td>Hauzenberg, Germany</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "      <td>Bib Gourmand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3444</th>\n",
       "      <td>Culinair</td>\n",
       "      <td>Lauwe, Belgium</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "      <td>Selected Restaurants</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>408 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Restaurant Name                   Location            True Award  \\\n",
       "24       Lake Road Kitchen  Ambleside, United Kingdom                1 Star   \n",
       "71                     ROM               Roses, Spain  Selected Restaurants   \n",
       "78       Hudson Smokehouse                 Bronx, USA  Selected Restaurants   \n",
       "87    Brasserie du Château    Bottmingen, Switzerland  Selected Restaurants   \n",
       "127                 Cristó     Zierikzee, Netherlands  Selected Restaurants   \n",
       "...                    ...                        ...                   ...   \n",
       "3408                 Forde  Horsforth, United Kingdom  Selected Restaurants   \n",
       "3427                  Nils          Koksijde, Belgium  Selected Restaurants   \n",
       "3430     Vecchia Malcesine           Malcesine, Italy                1 Star   \n",
       "3441             Anetseder        Hauzenberg, Germany          Bib Gourmand   \n",
       "3444              Culinair             Lauwe, Belgium  Selected Restaurants   \n",
       "\n",
       "             RF Prediction         LR Prediction         NB Prediction  \n",
       "24                  1 Star                1 Star                1 Star  \n",
       "71    Selected Restaurants  Selected Restaurants  Selected Restaurants  \n",
       "78    Selected Restaurants  Selected Restaurants  Selected Restaurants  \n",
       "87    Selected Restaurants  Selected Restaurants  Selected Restaurants  \n",
       "127   Selected Restaurants  Selected Restaurants  Selected Restaurants  \n",
       "...                    ...                   ...                   ...  \n",
       "3408  Selected Restaurants  Selected Restaurants  Selected Restaurants  \n",
       "3427  Selected Restaurants  Selected Restaurants  Selected Restaurants  \n",
       "3430                1 Star                1 Star                1 Star  \n",
       "3441          Bib Gourmand          Bib Gourmand          Bib Gourmand  \n",
       "3444  Selected Restaurants  Selected Restaurants  Selected Restaurants  \n",
       "\n",
       "[408 rows x 6 columns]"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find rows where all classifiers predicted the correct award\n",
    "accurate_preds_df = pred_comparison[\n",
    "    (pred_comparison['RF Prediction'] == pred_comparison['True Award']) &\n",
    "    (pred_comparison['LR Prediction'] == pred_comparison['True Award']) &\n",
    "    (pred_comparison['NB Prediction'] == pred_comparison['True Award'])\n",
    "]\n",
    "\n",
    "\n",
    "# Print accurately predicted value\n",
    "print(f\"\\nrestaurants in testset: {total_TEST}\")\n",
    "print(f\"\\nrestaurants with Award accuratelly predicted with all 3 methods:{len(accurate_preds_df)}\")\n",
    "print(\"\\nAccurately Predicted Values with all 3 methods:\")\n",
    "\n",
    "# Display the table with accurate predictions from all three methods\n",
    "accurate_preds_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Total number of restaurants: 408\n",
      " True Award\n",
      "Selected Restaurants    279\n",
      "Bib Gourmand             86\n",
      "1 Star                   43\n",
      "Name: count, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Step 3: Calculate total number of restaurants for the overall category\n",
    "total_restaurants = len(accurate_preds_df)\n",
    "print(f\"\\nTotal number of restaurants: {total_restaurants}\")\n",
    "\n",
    "# Step 1: Calculate the percentage of each award type\n",
    "award_counts = accurate_preds_df['True Award'].value_counts()\n",
    "award_percentages = (award_counts / award_counts.sum()) * 100\n",
    "print(f\" {award_counts}\")\n",
    "# Step 2: Plot the data\n",
    "plt.figure(figsize=(10, 6))\n",
    "award_percentages.plot(kind='bar', color='skyblue')\n",
    "plt.title('Percentage of Each Award Type of Restaurants')\n",
    "plt.xlabel('Award Type')\n",
    "plt.ylabel('Percentage (%)')\n",
    "plt.xticks(rotation=45)\n",
    "plt.ylim(0, 100)  # Set y-axis limits from 0 to 100\n",
    "plt.grid(axis='y')\n",
    "\n",
    "# Display the percentage on top of the bars\n",
    "for i, v in enumerate(award_percentages):\n",
    "    plt.text(i, v + 1, f\"{v:.1f}%\", ha='center', fontweight='bold')\n",
    "\n",
    "plt.tight_layout()  # Adjust layout for better fit\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Total number of restaurants in testset: 3459\n",
      " True Award\n",
      "Selected Restaurants    279\n",
      "Bib Gourmand             86\n",
      "1 Star                   43\n",
      "Name: count, dtype: int64\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Step 3: Calculate total number of restaurants for the overall category\n",
    "print(f\"\\nTotal number of restaurants in testset: {total_TEST}\")\n",
    "\n",
    "# Step 1: Calculate the percentage of each award type\n",
    "award_counts = accurate_preds_df['True Award'].value_counts()\n",
    "award_test=comparison_df['True Award'].value_counts()\n",
    "award_percentages = (award_counts / award_test.sum()) * 100\n",
    "print(f\" {award_counts}\")\n",
    "# Step 2: Plot the data\n",
    "plt.figure(figsize=(10, 6))\n",
    "award_percentages.plot(kind='bar', color='skyblue')\n",
    "plt.title('Percentage of Each Award Type of Restaurants')\n",
    "plt.xlabel('Award Type')\n",
    "plt.ylabel('Percentage (%)')\n",
    "plt.xticks(rotation=45)\n",
    "plt.ylim(0, 100)  # Set y-axis limits from 0 to 100\n",
    "plt.grid(axis='y')\n",
    "\n",
    "# Display the percentage on top of the bars\n",
    "for i, v in enumerate(award_percentages):\n",
    "    plt.text(i, v + 1, f\"{v:.1f}%\", ha='center', fontweight='bold')\n",
    "\n",
    "plt.tight_layout()  # Adjust layout for better fit\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Model: Random Forest\n",
      "Accuracy: 0.6528\n",
      "Precision: 0.6273\n",
      "Recall: 0.6528\n",
      "F1-score: 0.6317\n",
      "\n",
      "Model: Logistic Regression\n",
      "Accuracy: 0.6661\n",
      "Precision: 0.6351\n",
      "Recall: 0.6661\n",
      "F1-score: 0.6267\n",
      "\n",
      "Model: Gaussian Naive Bayes\n",
      "Accuracy: 0.2067\n",
      "Precision: 0.4990\n",
      "Recall: 0.2067\n",
      "F1-score: 0.2491\n",
      "\n",
      "Accuracy Table:\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\sklearn\\metrics\\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Accuracy</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Recall</th>\n",
       "      <th>F1-score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Random Forest</td>\n",
       "      <td>0.652790</td>\n",
       "      <td>0.627259</td>\n",
       "      <td>0.652790</td>\n",
       "      <td>0.631665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Logistic Regression</td>\n",
       "      <td>0.666088</td>\n",
       "      <td>0.635096</td>\n",
       "      <td>0.666088</td>\n",
       "      <td>0.626717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gaussian Naive Bayes</td>\n",
       "      <td>0.206707</td>\n",
       "      <td>0.498998</td>\n",
       "      <td>0.206707</td>\n",
       "      <td>0.249060</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Model  Accuracy  Precision    Recall  F1-score\n",
       "0         Random Forest  0.652790   0.627259  0.652790  0.631665\n",
       "1   Logistic Regression  0.666088   0.635096  0.666088  0.626717\n",
       "2  Gaussian Naive Bayes  0.206707   0.498998  0.206707  0.249060"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Initialize a list to store the results\n",
    "results = []\n",
    "\n",
    "# Evaluate Random Forest\n",
    "results.append(evaluate_model(y_test, y_pred_rf, 'Random Forest'))\n",
    "\n",
    "# Evaluate Logistic Regression\n",
    "results.append(evaluate_model(y_test, y_pred_lr, 'Logistic Regression'))\n",
    "\n",
    "# Evaluate Gaussian Naive Bayes\n",
    "results.append(evaluate_model(y_test, y_pred_nb, 'Gaussian Naive Bayes'))\n",
    "\n",
    "# Step 5: Create an accuracy table with metrics from all models\n",
    "metrics_df = pd.DataFrame(results, columns=['Model', 'Accuracy', 'Precision', 'Recall', 'F1-score'])\n",
    "print(\"\\nAccuracy Table:\")\n",
    "metrics_df"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
